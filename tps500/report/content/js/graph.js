/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 83.0, "minX": 0.0, "maxY": 76409.0, "series": [{"data": [[0.0, 595.0], [0.1, 595.0], [0.2, 3156.0], [0.3, 3156.0], [0.4, 3195.0], [0.5, 3195.0], [0.6, 3195.0], [0.7, 3195.0], [0.8, 3256.0], [0.9, 3256.0], [1.0, 3287.0], [1.1, 3287.0], [1.2, 3310.0], [1.3, 3310.0], [1.4, 3313.0], [1.5, 3313.0], [1.6, 3316.0], [1.7, 3316.0], [1.8, 3336.0], [1.9, 3336.0], [2.0, 3341.0], [2.1, 3341.0], [2.2, 3382.0], [2.3, 3382.0], [2.4, 3387.0], [2.5, 3387.0], [2.6, 3395.0], [2.7, 3395.0], [2.8, 3395.0], [2.9, 4148.0], [3.0, 4148.0], [3.1, 5140.0], [3.2, 5140.0], [3.3, 5145.0], [3.4, 5145.0], [3.5, 5188.0], [3.6, 5188.0], [3.7, 5226.0], [3.8, 5226.0], [3.9, 5360.0], [4.0, 5360.0], [4.1, 5367.0], [4.2, 5367.0], [4.3, 5385.0], [4.4, 5385.0], [4.5, 5393.0], [4.6, 5393.0], [4.7, 5396.0], [4.8, 5396.0], [4.9, 5411.0], [5.0, 5411.0], [5.1, 5437.0], [5.2, 5437.0], [5.3, 5440.0], [5.4, 5440.0], [5.5, 5532.0], [5.6, 5532.0], [5.7, 5648.0], [5.8, 5648.0], [5.9, 5785.0], [6.0, 5785.0], [6.1, 5973.0], [6.2, 5973.0], [6.3, 6087.0], [6.4, 6087.0], [6.5, 6430.0], [6.6, 6430.0], [6.7, 6445.0], [6.8, 6445.0], [6.9, 6497.0], [7.0, 6497.0], [7.1, 6509.0], [7.2, 6509.0], [7.3, 6513.0], [7.4, 6513.0], [7.5, 6714.0], [7.6, 6714.0], [7.7, 6719.0], [7.8, 6719.0], [7.9, 6760.0], [8.0, 6760.0], [8.1, 7160.0], [8.2, 7160.0], [8.3, 7907.0], [8.4, 7907.0], [8.5, 7913.0], [8.6, 7913.0], [8.7, 8259.0], [8.8, 8280.0], [8.9, 8280.0], [9.0, 8383.0], [9.1, 8383.0], [9.2, 8477.0], [9.3, 8477.0], [9.4, 8824.0], [9.5, 8824.0], [9.6, 8862.0], [9.7, 8862.0], [9.8, 8899.0], [9.9, 8899.0], [10.0, 8948.0], [10.1, 8948.0], [10.2, 9053.0], [10.3, 9053.0], [10.4, 9115.0], [10.5, 9115.0], [10.6, 9150.0], [10.7, 9150.0], [10.8, 9207.0], [10.9, 9207.0], [11.0, 9249.0], [11.1, 9249.0], [11.2, 9250.0], [11.3, 9250.0], [11.4, 9349.0], [11.5, 9349.0], [11.6, 9560.0], [11.7, 9560.0], [11.8, 9569.0], [11.9, 9569.0], [12.0, 9589.0], [12.1, 9589.0], [12.2, 9606.0], [12.3, 9606.0], [12.4, 9613.0], [12.5, 9613.0], [12.6, 9660.0], [12.7, 9660.0], [12.8, 9664.0], [12.9, 9664.0], [13.0, 9693.0], [13.1, 9693.0], [13.2, 9705.0], [13.3, 9705.0], [13.4, 9836.0], [13.5, 9836.0], [13.6, 9861.0], [13.7, 9861.0], [13.8, 9921.0], [13.9, 9921.0], [14.0, 9923.0], [14.1, 9923.0], [14.2, 9966.0], [14.3, 9966.0], [14.4, 9999.0], [14.5, 9999.0], [14.6, 10175.0], [14.7, 10175.0], [14.8, 10335.0], [14.9, 10335.0], [15.0, 10369.0], [15.1, 10369.0], [15.2, 10385.0], [15.3, 10385.0], [15.4, 10431.0], [15.5, 10431.0], [15.6, 10460.0], [15.7, 10460.0], [15.8, 10509.0], [15.9, 10509.0], [16.0, 10597.0], [16.1, 10597.0], [16.2, 10709.0], [16.3, 10709.0], [16.4, 10710.0], [16.5, 10710.0], [16.6, 10721.0], [16.7, 10721.0], [16.8, 10742.0], [16.9, 10742.0], [17.0, 10775.0], [17.1, 10775.0], [17.2, 10802.0], [17.3, 10802.0], [17.4, 10802.0], [17.5, 10802.0], [17.6, 10871.0], [17.7, 10871.0], [17.8, 10885.0], [17.9, 10885.0], [18.0, 10903.0], [18.1, 10903.0], [18.2, 10913.0], [18.3, 10913.0], [18.4, 10934.0], [18.5, 10934.0], [18.6, 10977.0], [18.7, 10977.0], [18.8, 10979.0], [18.9, 10979.0], [19.0, 11001.0], [19.1, 11001.0], [19.2, 11029.0], [19.3, 11029.0], [19.4, 11035.0], [19.5, 11035.0], [19.6, 11035.0], [19.7, 11035.0], [19.8, 11054.0], [19.9, 11054.0], [20.0, 11058.0], [20.1, 11058.0], [20.2, 11063.0], [20.3, 11063.0], [20.4, 11085.0], [20.5, 11085.0], [20.6, 11103.0], [20.7, 11103.0], [20.8, 11119.0], [20.9, 11119.0], [21.0, 11132.0], [21.1, 11132.0], [21.2, 11159.0], [21.3, 11159.0], [21.4, 11174.0], [21.5, 11174.0], [21.6, 11174.0], [21.7, 11174.0], [21.8, 11382.0], [21.9, 11382.0], [22.0, 11456.0], [22.1, 11456.0], [22.2, 11589.0], [22.3, 11589.0], [22.4, 11607.0], [22.5, 11607.0], [22.6, 11647.0], [22.7, 11647.0], [22.8, 11701.0], [22.9, 11701.0], [23.0, 11702.0], [23.1, 11702.0], [23.2, 11735.0], [23.3, 11735.0], [23.4, 11743.0], [23.5, 11743.0], [23.6, 11773.0], [23.7, 11773.0], [23.8, 11780.0], [23.9, 11780.0], [24.0, 11853.0], [24.1, 11853.0], [24.2, 11871.0], [24.3, 11871.0], [24.4, 11875.0], [24.5, 11875.0], [24.6, 11937.0], [24.7, 11937.0], [24.8, 12049.0], [24.9, 12049.0], [25.0, 12094.0], [25.1, 12094.0], [25.2, 12106.0], [25.3, 12106.0], [25.4, 12197.0], [25.5, 12197.0], [25.6, 12206.0], [25.7, 12206.0], [25.8, 12465.0], [25.9, 12465.0], [26.0, 12514.0], [26.1, 12514.0], [26.2, 12603.0], [26.3, 12603.0], [26.4, 12647.0], [26.5, 12647.0], [26.6, 12677.0], [26.7, 12677.0], [26.8, 12862.0], [26.9, 12862.0], [27.0, 13043.0], [27.1, 13043.0], [27.2, 13116.0], [27.3, 13116.0], [27.4, 13142.0], [27.5, 13142.0], [27.6, 13311.0], [27.7, 13311.0], [27.8, 13378.0], [27.9, 13378.0], [28.0, 13390.0], [28.1, 13390.0], [28.2, 13423.0], [28.3, 13423.0], [28.4, 13555.0], [28.5, 13555.0], [28.6, 13601.0], [28.7, 13601.0], [28.8, 13614.0], [28.9, 13614.0], [29.0, 13621.0], [29.1, 13621.0], [29.2, 13630.0], [29.3, 13630.0], [29.4, 13650.0], [29.5, 13650.0], [29.6, 13668.0], [29.7, 13668.0], [29.8, 13678.0], [29.9, 13678.0], [30.0, 13711.0], [30.1, 13711.0], [30.2, 13732.0], [30.3, 13732.0], [30.4, 13750.0], [30.5, 13750.0], [30.6, 13763.0], [30.7, 13763.0], [30.8, 13778.0], [30.9, 13778.0], [31.0, 13782.0], [31.1, 13782.0], [31.2, 13797.0], [31.3, 13797.0], [31.4, 13797.0], [31.5, 13797.0], [31.6, 13827.0], [31.7, 13827.0], [31.8, 13853.0], [31.9, 13853.0], [32.0, 13874.0], [32.1, 13874.0], [32.2, 13876.0], [32.3, 13876.0], [32.4, 13885.0], [32.5, 13885.0], [32.6, 13908.0], [32.7, 13908.0], [32.8, 13915.0], [32.9, 13915.0], [33.0, 13921.0], [33.1, 13921.0], [33.2, 13929.0], [33.3, 13929.0], [33.4, 13936.0], [33.5, 13936.0], [33.6, 13951.0], [33.7, 13951.0], [33.8, 13974.0], [33.9, 13974.0], [34.0, 13990.0], [34.1, 13990.0], [34.2, 13997.0], [34.3, 13997.0], [34.4, 14029.0], [34.5, 14029.0], [34.6, 14038.0], [34.7, 14038.0], [34.8, 14050.0], [34.9, 14050.0], [35.0, 14051.0], [35.1, 14051.0], [35.2, 14054.0], [35.3, 14054.0], [35.4, 14071.0], [35.5, 14071.0], [35.6, 14084.0], [35.7, 14084.0], [35.8, 14101.0], [35.9, 14101.0], [36.0, 14129.0], [36.1, 14129.0], [36.2, 14134.0], [36.3, 14134.0], [36.4, 14137.0], [36.5, 14137.0], [36.6, 14158.0], [36.7, 14158.0], [36.8, 14202.0], [36.9, 14202.0], [37.0, 14207.0], [37.1, 14207.0], [37.2, 14214.0], [37.3, 14214.0], [37.4, 14226.0], [37.5, 14226.0], [37.6, 14234.0], [37.7, 14234.0], [37.8, 14410.0], [37.9, 14410.0], [38.0, 14491.0], [38.1, 14491.0], [38.2, 14509.0], [38.3, 14509.0], [38.4, 14509.0], [38.5, 14642.0], [38.6, 14642.0], [38.7, 14645.0], [38.8, 14645.0], [38.9, 14667.0], [39.0, 14667.0], [39.1, 14675.0], [39.2, 14675.0], [39.3, 14698.0], [39.4, 14698.0], [39.5, 14751.0], [39.6, 14751.0], [39.7, 14884.0], [39.8, 14884.0], [39.9, 14925.0], [40.0, 14925.0], [40.1, 14968.0], [40.2, 14968.0], [40.3, 15125.0], [40.4, 15125.0], [40.5, 15394.0], [40.6, 15394.0], [40.7, 15425.0], [40.8, 15425.0], [40.9, 15448.0], [41.0, 15448.0], [41.1, 15481.0], [41.2, 15481.0], [41.3, 15542.0], [41.4, 15542.0], [41.5, 15592.0], [41.6, 15592.0], [41.7, 15781.0], [41.8, 15781.0], [41.9, 15795.0], [42.0, 15795.0], [42.1, 15903.0], [42.2, 15903.0], [42.3, 15907.0], [42.4, 15907.0], [42.5, 15971.0], [42.6, 15971.0], [42.7, 15987.0], [42.8, 15987.0], [42.9, 16054.0], [43.0, 16054.0], [43.1, 16078.0], [43.2, 16078.0], [43.3, 16161.0], [43.4, 16161.0], [43.5, 16183.0], [43.6, 16183.0], [43.7, 16236.0], [43.8, 16236.0], [43.9, 16266.0], [44.0, 16266.0], [44.1, 16285.0], [44.2, 16285.0], [44.3, 16331.0], [44.4, 16331.0], [44.5, 16355.0], [44.6, 16355.0], [44.7, 16360.0], [44.8, 16360.0], [44.9, 16367.0], [45.0, 16367.0], [45.1, 16370.0], [45.2, 16370.0], [45.3, 16376.0], [45.4, 16376.0], [45.5, 16384.0], [45.6, 16384.0], [45.7, 16405.0], [45.8, 16405.0], [45.9, 16411.0], [46.0, 16411.0], [46.1, 16529.0], [46.2, 16529.0], [46.3, 16617.0], [46.4, 16617.0], [46.5, 16650.0], [46.6, 16650.0], [46.7, 16652.0], [46.8, 16652.0], [46.9, 16670.0], [47.0, 16670.0], [47.1, 16675.0], [47.2, 16675.0], [47.3, 16706.0], [47.4, 16706.0], [47.5, 16738.0], [47.6, 16738.0], [47.7, 16760.0], [47.8, 16760.0], [47.9, 16760.0], [48.0, 16760.0], [48.1, 16794.0], [48.2, 16794.0], [48.3, 16794.0], [48.4, 16794.0], [48.5, 16843.0], [48.6, 16843.0], [48.7, 16843.0], [48.8, 16843.0], [48.9, 16844.0], [49.0, 16844.0], [49.1, 16857.0], [49.2, 16857.0], [49.3, 16913.0], [49.4, 16913.0], [49.5, 16926.0], [49.6, 16926.0], [49.7, 16937.0], [49.8, 16937.0], [49.9, 16951.0], [50.0, 16951.0], [50.1, 16971.0], [50.2, 16971.0], [50.3, 16984.0], [50.4, 16984.0], [50.5, 16985.0], [50.6, 16985.0], [50.7, 17011.0], [50.8, 17011.0], [50.9, 17043.0], [51.0, 17043.0], [51.1, 17103.0], [51.2, 17103.0], [51.3, 17121.0], [51.4, 17121.0], [51.5, 17133.0], [51.6, 17133.0], [51.7, 17152.0], [51.8, 17152.0], [51.9, 17177.0], [52.0, 17177.0], [52.1, 17211.0], [52.2, 17211.0], [52.3, 17302.0], [52.4, 17302.0], [52.5, 17379.0], [52.6, 17379.0], [52.7, 17460.0], [52.8, 17460.0], [52.9, 17538.0], [53.0, 17538.0], [53.1, 17580.0], [53.2, 17580.0], [53.3, 17686.0], [53.4, 17686.0], [53.5, 17698.0], [53.6, 17698.0], [53.7, 17743.0], [53.8, 17743.0], [53.9, 17756.0], [54.0, 17756.0], [54.1, 17819.0], [54.2, 17819.0], [54.3, 17874.0], [54.4, 17874.0], [54.5, 17909.0], [54.6, 17909.0], [54.7, 17915.0], [54.8, 17915.0], [54.9, 17938.0], [55.0, 17938.0], [55.1, 17959.0], [55.2, 17959.0], [55.3, 17987.0], [55.4, 17987.0], [55.5, 17991.0], [55.6, 17991.0], [55.7, 18046.0], [55.8, 18046.0], [55.9, 18052.0], [56.0, 18052.0], [56.1, 18134.0], [56.2, 18134.0], [56.3, 18182.0], [56.4, 18182.0], [56.5, 18229.0], [56.6, 18229.0], [56.7, 18449.0], [56.8, 18449.0], [56.9, 18459.0], [57.0, 18459.0], [57.1, 18500.0], [57.2, 18500.0], [57.3, 18500.0], [57.4, 18500.0], [57.5, 18530.0], [57.6, 18530.0], [57.7, 18546.0], [57.8, 18546.0], [57.9, 18593.0], [58.0, 18593.0], [58.1, 18593.0], [58.2, 18593.0], [58.3, 18606.0], [58.4, 18606.0], [58.5, 18642.0], [58.6, 18642.0], [58.7, 18648.0], [58.8, 18648.0], [58.9, 18768.0], [59.0, 18768.0], [59.1, 18795.0], [59.2, 18795.0], [59.3, 18870.0], [59.4, 18870.0], [59.5, 18875.0], [59.6, 18875.0], [59.7, 18903.0], [59.8, 18903.0], [59.9, 18996.0], [60.0, 18996.0], [60.1, 19002.0], [60.2, 19002.0], [60.3, 19010.0], [60.4, 19010.0], [60.5, 19011.0], [60.6, 19011.0], [60.7, 19014.0], [60.8, 19014.0], [60.9, 19025.0], [61.0, 19025.0], [61.1, 19059.0], [61.2, 19059.0], [61.3, 19144.0], [61.4, 19144.0], [61.5, 19203.0], [61.6, 19203.0], [61.7, 19206.0], [61.8, 19206.0], [61.9, 19260.0], [62.0, 19260.0], [62.1, 19295.0], [62.2, 19295.0], [62.3, 19367.0], [62.4, 19367.0], [62.5, 19601.0], [62.6, 19601.0], [62.7, 19723.0], [62.8, 19723.0], [62.9, 19733.0], [63.0, 19733.0], [63.1, 19757.0], [63.2, 19757.0], [63.3, 19803.0], [63.4, 19803.0], [63.5, 19817.0], [63.6, 19817.0], [63.7, 19831.0], [63.8, 19831.0], [63.9, 19840.0], [64.0, 19840.0], [64.1, 19932.0], [64.2, 19932.0], [64.3, 20077.0], [64.4, 20077.0], [64.5, 20106.0], [64.6, 20106.0], [64.7, 20220.0], [64.8, 20220.0], [64.9, 20229.0], [65.0, 20229.0], [65.1, 20292.0], [65.2, 20292.0], [65.3, 20316.0], [65.4, 20316.0], [65.5, 20442.0], [65.6, 20442.0], [65.7, 20460.0], [65.8, 20460.0], [65.9, 20503.0], [66.0, 20503.0], [66.1, 20545.0], [66.2, 20545.0], [66.3, 20547.0], [66.4, 20547.0], [66.5, 20566.0], [66.6, 20566.0], [66.7, 20572.0], [66.8, 20572.0], [66.9, 20594.0], [67.0, 20594.0], [67.1, 20612.0], [67.2, 20612.0], [67.3, 20638.0], [67.4, 20638.0], [67.5, 20689.0], [67.6, 20689.0], [67.7, 20739.0], [67.8, 20739.0], [67.9, 20757.0], [68.0, 20757.0], [68.1, 20761.0], [68.2, 20761.0], [68.3, 20794.0], [68.4, 20794.0], [68.5, 20844.0], [68.6, 20844.0], [68.7, 20849.0], [68.8, 20849.0], [68.9, 21006.0], [69.0, 21006.0], [69.1, 21008.0], [69.2, 21008.0], [69.3, 21014.0], [69.4, 21014.0], [69.5, 21033.0], [69.6, 21033.0], [69.7, 21063.0], [69.8, 21063.0], [69.9, 21080.0], [70.0, 21080.0], [70.1, 21084.0], [70.2, 21084.0], [70.3, 21105.0], [70.4, 21105.0], [70.5, 21106.0], [70.6, 21106.0], [70.7, 21121.0], [70.8, 21121.0], [70.9, 21125.0], [71.0, 21125.0], [71.1, 21221.0], [71.2, 21221.0], [71.3, 21240.0], [71.4, 21240.0], [71.5, 21331.0], [71.6, 21331.0], [71.7, 21382.0], [71.8, 21382.0], [71.9, 21535.0], [72.0, 21535.0], [72.1, 21581.0], [72.2, 21581.0], [72.3, 21729.0], [72.4, 21729.0], [72.5, 21762.0], [72.6, 21762.0], [72.7, 21771.0], [72.8, 21771.0], [72.9, 21785.0], [73.0, 21785.0], [73.1, 21848.0], [73.2, 21848.0], [73.3, 21861.0], [73.4, 21861.0], [73.5, 21969.0], [73.6, 21969.0], [73.7, 22041.0], [73.8, 22041.0], [73.9, 22047.0], [74.0, 22047.0], [74.1, 22101.0], [74.2, 22101.0], [74.3, 22281.0], [74.4, 22281.0], [74.5, 22394.0], [74.6, 22394.0], [74.7, 22410.0], [74.8, 22410.0], [74.9, 22494.0], [75.0, 22494.0], [75.1, 22515.0], [75.2, 22515.0], [75.3, 22544.0], [75.4, 22544.0], [75.5, 22545.0], [75.6, 22545.0], [75.7, 22614.0], [75.8, 22614.0], [75.9, 22614.0], [76.0, 22614.0], [76.1, 22639.0], [76.2, 22639.0], [76.3, 22722.0], [76.4, 22722.0], [76.5, 22840.0], [76.6, 22840.0], [76.7, 22929.0], [76.8, 22929.0], [76.9, 22970.0], [77.0, 22970.0], [77.1, 23035.0], [77.2, 23035.0], [77.3, 23040.0], [77.4, 23040.0], [77.5, 23084.0], [77.6, 23084.0], [77.7, 23088.0], [77.8, 23088.0], [77.9, 23090.0], [78.0, 23090.0], [78.1, 23105.0], [78.2, 23105.0], [78.3, 23153.0], [78.4, 23153.0], [78.5, 23204.0], [78.6, 23204.0], [78.7, 23204.0], [78.8, 23204.0], [78.9, 23270.0], [79.0, 23270.0], [79.1, 23309.0], [79.2, 23309.0], [79.3, 23330.0], [79.4, 23330.0], [79.5, 23444.0], [79.6, 23444.0], [79.7, 23449.0], [79.8, 23449.0], [79.9, 23488.0], [80.0, 23488.0], [80.1, 23528.0], [80.2, 23528.0], [80.3, 23737.0], [80.4, 23737.0], [80.5, 23805.0], [80.6, 23805.0], [80.7, 24099.0], [80.8, 24099.0], [80.9, 24124.0], [81.0, 24124.0], [81.1, 24130.0], [81.2, 24130.0], [81.3, 24211.0], [81.4, 24211.0], [81.5, 24467.0], [81.6, 24467.0], [81.7, 24769.0], [81.8, 24769.0], [81.9, 24923.0], [82.0, 24923.0], [82.1, 24939.0], [82.2, 24939.0], [82.3, 24987.0], [82.4, 24987.0], [82.5, 24997.0], [82.6, 24997.0], [82.7, 25123.0], [82.8, 25123.0], [82.9, 25187.0], [83.0, 25187.0], [83.1, 25354.0], [83.2, 25354.0], [83.3, 25402.0], [83.4, 25402.0], [83.5, 25426.0], [83.6, 25426.0], [83.7, 25436.0], [83.8, 25436.0], [83.9, 25461.0], [84.0, 25461.0], [84.1, 25506.0], [84.2, 25506.0], [84.3, 25535.0], [84.4, 25535.0], [84.5, 25558.0], [84.6, 25558.0], [84.7, 25609.0], [84.8, 25609.0], [84.9, 25857.0], [85.0, 25857.0], [85.1, 25859.0], [85.2, 25859.0], [85.3, 25887.0], [85.4, 25887.0], [85.5, 25898.0], [85.6, 25898.0], [85.7, 25958.0], [85.8, 25958.0], [85.9, 26040.0], [86.0, 26040.0], [86.1, 26113.0], [86.2, 26113.0], [86.3, 26153.0], [86.4, 26153.0], [86.5, 26410.0], [86.6, 26410.0], [86.7, 26510.0], [86.8, 26510.0], [86.9, 26654.0], [87.0, 26654.0], [87.1, 26673.0], [87.2, 26673.0], [87.3, 26724.0], [87.4, 26724.0], [87.5, 27114.0], [87.6, 27114.0], [87.7, 27451.0], [87.8, 27451.0], [87.9, 27486.0], [88.0, 27486.0], [88.1, 27571.0], [88.2, 27571.0], [88.3, 27652.0], [88.4, 27652.0], [88.5, 27683.0], [88.6, 27683.0], [88.7, 27712.0], [88.8, 27712.0], [88.9, 27730.0], [89.0, 27730.0], [89.1, 27746.0], [89.2, 27746.0], [89.3, 27858.0], [89.4, 27858.0], [89.5, 27892.0], [89.6, 27892.0], [89.7, 27900.0], [89.8, 27900.0], [89.9, 27964.0], [90.0, 27964.0], [90.1, 28097.0], [90.2, 28097.0], [90.3, 28251.0], [90.4, 28251.0], [90.5, 28729.0], [90.6, 28729.0], [90.7, 29586.0], [90.8, 29586.0], [90.9, 29600.0], [91.0, 29600.0], [91.1, 29678.0], [91.2, 29678.0], [91.3, 29685.0], [91.4, 29685.0], [91.5, 29699.0], [91.6, 29699.0], [91.7, 29710.0], [91.8, 29710.0], [91.9, 29814.0], [92.0, 29814.0], [92.1, 29898.0], [92.2, 29898.0], [92.3, 29918.0], [92.4, 29918.0], [92.5, 30025.0], [92.6, 30025.0], [92.7, 30028.0], [92.8, 30028.0], [92.9, 30124.0], [93.0, 30124.0], [93.1, 30275.0], [93.2, 30275.0], [93.3, 30285.0], [93.4, 30285.0], [93.5, 30368.0], [93.6, 30368.0], [93.7, 30597.0], [93.8, 30597.0], [93.9, 30606.0], [94.0, 30606.0], [94.1, 30679.0], [94.2, 30679.0], [94.3, 30679.0], [94.4, 30679.0], [94.5, 30777.0], [94.6, 30777.0], [94.7, 30787.0], [94.8, 30787.0], [94.9, 30814.0], [95.0, 30814.0], [95.1, 30827.0], [95.2, 30827.0], [95.3, 30855.0], [95.4, 30855.0], [95.5, 30926.0], [95.6, 30926.0], [95.7, 30943.0], [95.8, 30943.0], [95.9, 31001.0], [96.0, 31001.0], [96.1, 31025.0], [96.2, 31025.0], [96.3, 31124.0], [96.4, 31124.0], [96.5, 31148.0], [96.6, 31148.0], [96.7, 31221.0], [96.8, 31221.0], [96.9, 31256.0], [97.0, 31256.0], [97.1, 31555.0], [97.2, 31555.0], [97.3, 32597.0], [97.4, 32597.0], [97.5, 32665.0], [97.6, 32665.0], [97.7, 32690.0], [97.8, 32690.0], [97.9, 32929.0], [98.0, 32929.0], [98.1, 32950.0], [98.2, 32950.0], [98.3, 33138.0], [98.4, 33138.0], [98.5, 33240.0], [98.6, 33240.0], [98.7, 33531.0], [98.8, 33531.0], [98.9, 35017.0], [99.0, 35017.0], [99.1, 35631.0], [99.2, 35631.0], [99.3, 35638.0], [99.4, 35638.0], [99.5, 35736.0], [99.6, 35736.0], [99.7, 35962.0], [99.8, 35962.0], [99.9, 36662.0], [100.0, 36662.0]], "isOverall": false, "label": "HTTP 要求: Step3: Change Avatar", "isController": false}, {"data": [[0.0, 83.0], [0.1, 83.0], [0.2, 208.0], [0.3, 208.0], [0.4, 260.0], [0.5, 260.0], [0.6, 260.0], [0.7, 326.0], [0.8, 339.0], [0.9, 339.0], [1.0, 345.0], [1.1, 345.0], [1.2, 389.0], [1.3, 389.0], [1.4, 397.0], [1.5, 397.0], [1.6, 412.0], [1.7, 412.0], [1.8, 415.0], [1.9, 415.0], [2.0, 418.0], [2.1, 418.0], [2.2, 433.0], [2.3, 433.0], [2.4, 441.0], [2.5, 441.0], [2.6, 468.0], [2.7, 468.0], [2.8, 468.0], [2.9, 492.0], [3.0, 492.0], [3.1, 513.0], [3.2, 513.0], [3.3, 550.0], [3.4, 550.0], [3.5, 551.0], [3.6, 551.0], [3.7, 559.0], [3.8, 559.0], [3.9, 574.0], [4.0, 574.0], [4.1, 576.0], [4.2, 576.0], [4.3, 583.0], [4.4, 583.0], [4.5, 598.0], [4.6, 598.0], [4.7, 603.0], [4.8, 603.0], [4.9, 623.0], [5.0, 623.0], [5.1, 625.0], [5.2, 625.0], [5.3, 628.0], [5.4, 628.0], [5.5, 638.0], [5.6, 638.0], [5.7, 653.0], [5.8, 653.0], [5.9, 653.0], [6.0, 653.0], [6.1, 662.0], [6.2, 662.0], [6.3, 674.0], [6.4, 674.0], [6.5, 690.0], [6.6, 690.0], [6.7, 699.0], [6.8, 699.0], [6.9, 707.0], [7.0, 707.0], [7.1, 707.0], [7.2, 707.0], [7.3, 717.0], [7.4, 717.0], [7.5, 718.0], [7.6, 718.0], [7.7, 732.0], [7.8, 732.0], [7.9, 739.0], [8.0, 739.0], [8.1, 739.0], [8.2, 739.0], [8.3, 744.0], [8.4, 744.0], [8.5, 756.0], [8.6, 756.0], [8.7, 776.0], [8.8, 776.0], [8.9, 776.0], [9.0, 776.0], [9.1, 783.0], [9.2, 783.0], [9.3, 800.0], [9.4, 800.0], [9.5, 801.0], [9.6, 801.0], [9.7, 806.0], [9.8, 810.0], [9.9, 810.0], [10.0, 814.0], [10.1, 814.0], [10.2, 822.0], [10.3, 822.0], [10.4, 825.0], [10.5, 825.0], [10.6, 834.0], [10.7, 834.0], [10.8, 859.0], [10.9, 859.0], [11.0, 862.0], [11.1, 862.0], [11.2, 863.0], [11.3, 863.0], [11.4, 866.0], [11.5, 866.0], [11.6, 866.0], [11.7, 866.0], [11.8, 883.0], [11.9, 883.0], [12.0, 905.0], [12.1, 905.0], [12.2, 906.0], [12.3, 906.0], [12.4, 908.0], [12.5, 908.0], [12.6, 915.0], [12.7, 915.0], [12.8, 930.0], [12.9, 930.0], [13.0, 930.0], [13.1, 930.0], [13.2, 943.0], [13.3, 943.0], [13.4, 950.0], [13.5, 950.0], [13.6, 1002.0], [13.7, 1002.0], [13.8, 1018.0], [13.9, 1018.0], [14.0, 1030.0], [14.1, 1030.0], [14.2, 1036.0], [14.3, 1036.0], [14.4, 1044.0], [14.5, 1044.0], [14.6, 1077.0], [14.7, 1077.0], [14.8, 1098.0], [14.9, 1098.0], [15.0, 1098.0], [15.1, 1098.0], [15.2, 1106.0], [15.3, 1106.0], [15.4, 1125.0], [15.5, 1125.0], [15.6, 1131.0], [15.7, 1131.0], [15.8, 1132.0], [15.9, 1132.0], [16.0, 1140.0], [16.1, 1140.0], [16.2, 1141.0], [16.3, 1141.0], [16.4, 1152.0], [16.5, 1152.0], [16.6, 1168.0], [16.7, 1168.0], [16.8, 1178.0], [16.9, 1178.0], [17.0, 1183.0], [17.1, 1183.0], [17.2, 1191.0], [17.3, 1191.0], [17.4, 1233.0], [17.5, 1233.0], [17.6, 1235.0], [17.7, 1235.0], [17.8, 1249.0], [17.9, 1249.0], [18.0, 1260.0], [18.1, 1260.0], [18.2, 1278.0], [18.3, 1278.0], [18.4, 1287.0], [18.5, 1287.0], [18.6, 1290.0], [18.7, 1290.0], [18.8, 1291.0], [18.9, 1291.0], [19.0, 1291.0], [19.1, 1291.0], [19.2, 1303.0], [19.3, 1303.0], [19.4, 1307.0], [19.5, 1307.0], [19.6, 1315.0], [19.7, 1315.0], [19.8, 1367.0], [19.9, 1367.0], [20.0, 1368.0], [20.1, 1368.0], [20.2, 1382.0], [20.3, 1382.0], [20.4, 1417.0], [20.5, 1417.0], [20.6, 1441.0], [20.7, 1441.0], [20.8, 1455.0], [20.9, 1455.0], [21.0, 1493.0], [21.1, 1493.0], [21.2, 1524.0], [21.3, 1524.0], [21.4, 1576.0], [21.5, 1576.0], [21.6, 1599.0], [21.7, 1599.0], [21.8, 1606.0], [21.9, 1606.0], [22.0, 1637.0], [22.1, 1637.0], [22.2, 1660.0], [22.3, 1660.0], [22.4, 1673.0], [22.5, 1673.0], [22.6, 1673.0], [22.7, 1673.0], [22.8, 1677.0], [22.9, 1677.0], [23.0, 1714.0], [23.1, 1714.0], [23.2, 1729.0], [23.3, 1729.0], [23.4, 1735.0], [23.5, 1735.0], [23.6, 1763.0], [23.7, 1763.0], [23.8, 1779.0], [23.9, 1779.0], [24.0, 1787.0], [24.1, 1787.0], [24.2, 1798.0], [24.3, 1798.0], [24.4, 1838.0], [24.5, 1838.0], [24.6, 1849.0], [24.7, 1849.0], [24.8, 1850.0], [24.9, 1850.0], [25.0, 1851.0], [25.1, 1851.0], [25.2, 1859.0], [25.3, 1859.0], [25.4, 1862.0], [25.5, 1862.0], [25.6, 1874.0], [25.7, 1874.0], [25.8, 1876.0], [25.9, 1876.0], [26.0, 1880.0], [26.1, 1880.0], [26.2, 1905.0], [26.3, 1905.0], [26.4, 1916.0], [26.5, 1916.0], [26.6, 1918.0], [26.7, 1918.0], [26.8, 1920.0], [26.9, 1920.0], [27.0, 1922.0], [27.1, 1922.0], [27.2, 1928.0], [27.3, 1928.0], [27.4, 1929.0], [27.5, 1929.0], [27.6, 1937.0], [27.7, 1937.0], [27.8, 1945.0], [27.9, 1945.0], [28.0, 1953.0], [28.1, 1953.0], [28.2, 1955.0], [28.3, 1955.0], [28.4, 1959.0], [28.5, 1959.0], [28.6, 1964.0], [28.7, 1964.0], [28.8, 1984.0], [28.9, 1984.0], [29.0, 2008.0], [29.1, 2008.0], [29.2, 2011.0], [29.3, 2011.0], [29.4, 2020.0], [29.5, 2020.0], [29.6, 2022.0], [29.7, 2022.0], [29.8, 2023.0], [29.9, 2023.0], [30.0, 2023.0], [30.1, 2023.0], [30.2, 2028.0], [30.3, 2028.0], [30.4, 2034.0], [30.5, 2034.0], [30.6, 2048.0], [30.7, 2048.0], [30.8, 2052.0], [30.9, 2052.0], [31.0, 2056.0], [31.1, 2056.0], [31.2, 2059.0], [31.3, 2059.0], [31.4, 2065.0], [31.5, 2065.0], [31.6, 2074.0], [31.7, 2074.0], [31.8, 2078.0], [31.9, 2078.0], [32.0, 2081.0], [32.1, 2081.0], [32.2, 2101.0], [32.3, 2101.0], [32.4, 2110.0], [32.5, 2110.0], [32.6, 2120.0], [32.7, 2120.0], [32.8, 2142.0], [32.9, 2142.0], [33.0, 2153.0], [33.1, 2153.0], [33.2, 2159.0], [33.3, 2159.0], [33.4, 2166.0], [33.5, 2166.0], [33.6, 2225.0], [33.7, 2225.0], [33.8, 2227.0], [33.9, 2227.0], [34.0, 2247.0], [34.1, 2247.0], [34.2, 2248.0], [34.3, 2248.0], [34.4, 2275.0], [34.5, 2275.0], [34.6, 2275.0], [34.7, 2275.0], [34.8, 2276.0], [34.9, 2276.0], [35.0, 2282.0], [35.1, 2282.0], [35.2, 2302.0], [35.3, 2302.0], [35.4, 2306.0], [35.5, 2306.0], [35.6, 2318.0], [35.7, 2318.0], [35.8, 2318.0], [35.9, 2318.0], [36.0, 2327.0], [36.1, 2327.0], [36.2, 2338.0], [36.3, 2338.0], [36.4, 2351.0], [36.5, 2351.0], [36.6, 2353.0], [36.7, 2353.0], [36.8, 2364.0], [36.9, 2364.0], [37.0, 2373.0], [37.1, 2373.0], [37.2, 2377.0], [37.3, 2377.0], [37.4, 2381.0], [37.5, 2381.0], [37.6, 2384.0], [37.7, 2384.0], [37.8, 2419.0], [37.9, 2419.0], [38.0, 2460.0], [38.1, 2460.0], [38.2, 2475.0], [38.3, 2475.0], [38.4, 2475.0], [38.5, 2476.0], [38.6, 2476.0], [38.7, 2476.0], [38.8, 2476.0], [38.9, 2501.0], [39.0, 2501.0], [39.1, 2522.0], [39.2, 2522.0], [39.3, 2522.0], [39.4, 2522.0], [39.5, 2526.0], [39.6, 2526.0], [39.7, 2546.0], [39.8, 2546.0], [39.9, 2562.0], [40.0, 2562.0], [40.1, 2564.0], [40.2, 2564.0], [40.3, 2571.0], [40.4, 2571.0], [40.5, 2572.0], [40.6, 2572.0], [40.7, 2586.0], [40.8, 2586.0], [40.9, 2628.0], [41.0, 2628.0], [41.1, 2645.0], [41.2, 2645.0], [41.3, 2645.0], [41.4, 2645.0], [41.5, 2646.0], [41.6, 2646.0], [41.7, 2647.0], [41.8, 2647.0], [41.9, 2663.0], [42.0, 2663.0], [42.1, 2664.0], [42.2, 2664.0], [42.3, 2667.0], [42.4, 2667.0], [42.5, 2687.0], [42.6, 2687.0], [42.7, 2689.0], [42.8, 2689.0], [42.9, 2692.0], [43.0, 2692.0], [43.1, 2727.0], [43.2, 2727.0], [43.3, 2730.0], [43.4, 2730.0], [43.5, 2731.0], [43.6, 2731.0], [43.7, 2738.0], [43.8, 2738.0], [43.9, 2756.0], [44.0, 2756.0], [44.1, 2757.0], [44.2, 2757.0], [44.3, 2766.0], [44.4, 2766.0], [44.5, 2770.0], [44.6, 2770.0], [44.7, 2780.0], [44.8, 2780.0], [44.9, 2806.0], [45.0, 2806.0], [45.1, 2822.0], [45.2, 2822.0], [45.3, 2854.0], [45.4, 2854.0], [45.5, 2855.0], [45.6, 2855.0], [45.7, 2856.0], [45.8, 2856.0], [45.9, 2862.0], [46.0, 2862.0], [46.1, 2863.0], [46.2, 2863.0], [46.3, 2871.0], [46.4, 2871.0], [46.5, 2887.0], [46.6, 2887.0], [46.7, 2917.0], [46.8, 2917.0], [46.9, 2921.0], [47.0, 2921.0], [47.1, 2928.0], [47.2, 2928.0], [47.3, 2929.0], [47.4, 2929.0], [47.5, 2935.0], [47.6, 2935.0], [47.7, 2963.0], [47.8, 2963.0], [47.9, 2981.0], [48.0, 2981.0], [48.1, 2986.0], [48.2, 2986.0], [48.3, 2993.0], [48.4, 2993.0], [48.5, 3045.0], [48.6, 3045.0], [48.7, 3047.0], [48.8, 3047.0], [48.9, 3051.0], [49.0, 3051.0], [49.1, 3064.0], [49.2, 3064.0], [49.3, 3101.0], [49.4, 3101.0], [49.5, 3103.0], [49.6, 3103.0], [49.7, 3119.0], [49.8, 3119.0], [49.9, 3121.0], [50.0, 3121.0], [50.1, 3132.0], [50.2, 3132.0], [50.3, 3133.0], [50.4, 3133.0], [50.5, 3135.0], [50.6, 3135.0], [50.7, 3158.0], [50.8, 3158.0], [50.9, 3166.0], [51.0, 3166.0], [51.1, 3224.0], [51.2, 3224.0], [51.3, 3232.0], [51.4, 3232.0], [51.5, 3242.0], [51.6, 3242.0], [51.7, 3243.0], [51.8, 3243.0], [51.9, 3333.0], [52.0, 3333.0], [52.1, 3376.0], [52.2, 3376.0], [52.3, 3432.0], [52.4, 3432.0], [52.5, 3473.0], [52.6, 3473.0], [52.7, 3473.0], [52.8, 3473.0], [52.9, 3540.0], [53.0, 3540.0], [53.1, 3593.0], [53.2, 3593.0], [53.3, 3598.0], [53.4, 3598.0], [53.5, 3604.0], [53.6, 3604.0], [53.7, 3629.0], [53.8, 3629.0], [53.9, 3634.0], [54.0, 3634.0], [54.1, 3673.0], [54.2, 3673.0], [54.3, 3703.0], [54.4, 3703.0], [54.5, 3708.0], [54.6, 3708.0], [54.7, 3710.0], [54.8, 3710.0], [54.9, 3771.0], [55.0, 3771.0], [55.1, 3858.0], [55.2, 3858.0], [55.3, 3871.0], [55.4, 3871.0], [55.5, 3877.0], [55.6, 3877.0], [55.7, 3895.0], [55.8, 3895.0], [55.9, 3958.0], [56.0, 3958.0], [56.1, 3967.0], [56.2, 3967.0], [56.3, 4018.0], [56.4, 4018.0], [56.5, 4027.0], [56.6, 4027.0], [56.7, 4048.0], [56.8, 4048.0], [56.9, 4071.0], [57.0, 4071.0], [57.1, 4154.0], [57.2, 4154.0], [57.3, 4203.0], [57.4, 4203.0], [57.5, 4204.0], [57.6, 4204.0], [57.7, 4220.0], [57.8, 4220.0], [57.9, 4235.0], [58.0, 4235.0], [58.1, 4251.0], [58.2, 4251.0], [58.3, 4291.0], [58.4, 4291.0], [58.5, 4292.0], [58.6, 4292.0], [58.7, 4294.0], [58.8, 4294.0], [58.9, 4304.0], [59.0, 4304.0], [59.1, 4312.0], [59.2, 4312.0], [59.3, 4323.0], [59.4, 4323.0], [59.5, 4331.0], [59.6, 4331.0], [59.7, 4343.0], [59.8, 4343.0], [59.9, 4363.0], [60.0, 4363.0], [60.1, 4369.0], [60.2, 4369.0], [60.3, 4419.0], [60.4, 4419.0], [60.5, 4451.0], [60.6, 4451.0], [60.7, 4548.0], [60.8, 4548.0], [60.9, 4551.0], [61.0, 4551.0], [61.1, 4607.0], [61.2, 4607.0], [61.3, 4614.0], [61.4, 4614.0], [61.5, 4656.0], [61.6, 4656.0], [61.7, 4694.0], [61.8, 4694.0], [61.9, 4723.0], [62.0, 4723.0], [62.1, 4773.0], [62.2, 4773.0], [62.3, 4819.0], [62.4, 4819.0], [62.5, 4835.0], [62.6, 4835.0], [62.7, 4836.0], [62.8, 4836.0], [62.9, 4855.0], [63.0, 4855.0], [63.1, 4889.0], [63.2, 4889.0], [63.3, 4991.0], [63.4, 4991.0], [63.5, 5004.0], [63.6, 5004.0], [63.7, 5009.0], [63.8, 5009.0], [63.9, 5146.0], [64.0, 5146.0], [64.1, 5342.0], [64.2, 5342.0], [64.3, 5343.0], [64.4, 5343.0], [64.5, 5361.0], [64.6, 5361.0], [64.7, 5437.0], [64.8, 5437.0], [64.9, 5562.0], [65.0, 5562.0], [65.1, 5581.0], [65.2, 5581.0], [65.3, 5624.0], [65.4, 5624.0], [65.5, 5675.0], [65.6, 5675.0], [65.7, 5711.0], [65.8, 5711.0], [65.9, 5724.0], [66.0, 5724.0], [66.1, 5752.0], [66.2, 5752.0], [66.3, 5754.0], [66.4, 5754.0], [66.5, 5754.0], [66.6, 5754.0], [66.7, 5786.0], [66.8, 5786.0], [66.9, 5819.0], [67.0, 5819.0], [67.1, 5840.0], [67.2, 5840.0], [67.3, 5845.0], [67.4, 5845.0], [67.5, 5860.0], [67.6, 5860.0], [67.7, 5899.0], [67.8, 5899.0], [67.9, 6052.0], [68.0, 6052.0], [68.1, 6152.0], [68.2, 6152.0], [68.3, 6156.0], [68.4, 6156.0], [68.5, 6167.0], [68.6, 6167.0], [68.7, 6235.0], [68.8, 6235.0], [68.9, 6302.0], [69.0, 6302.0], [69.1, 6340.0], [69.2, 6340.0], [69.3, 6465.0], [69.4, 6465.0], [69.5, 6799.0], [69.6, 6799.0], [69.7, 6832.0], [69.8, 6832.0], [69.9, 6837.0], [70.0, 6837.0], [70.1, 6935.0], [70.2, 6935.0], [70.3, 6956.0], [70.4, 6956.0], [70.5, 6959.0], [70.6, 6959.0], [70.7, 6969.0], [70.8, 6969.0], [70.9, 6984.0], [71.0, 6984.0], [71.1, 6987.0], [71.2, 6987.0], [71.3, 6987.0], [71.4, 6987.0], [71.5, 7080.0], [71.6, 7080.0], [71.7, 7083.0], [71.8, 7083.0], [71.9, 7129.0], [72.0, 7129.0], [72.1, 7342.0], [72.2, 7342.0], [72.3, 7350.0], [72.4, 7350.0], [72.5, 7355.0], [72.6, 7355.0], [72.7, 7430.0], [72.8, 7430.0], [72.9, 7446.0], [73.0, 7446.0], [73.1, 7509.0], [73.2, 7509.0], [73.3, 7530.0], [73.4, 7530.0], [73.5, 7557.0], [73.6, 7557.0], [73.7, 7574.0], [73.8, 7574.0], [73.9, 7602.0], [74.0, 7602.0], [74.1, 7694.0], [74.2, 7694.0], [74.3, 7768.0], [74.4, 7768.0], [74.5, 7773.0], [74.6, 7773.0], [74.7, 7887.0], [74.8, 7887.0], [74.9, 7942.0], [75.0, 7942.0], [75.1, 7985.0], [75.2, 7985.0], [75.3, 8106.0], [75.4, 8106.0], [75.5, 8172.0], [75.6, 8172.0], [75.7, 8175.0], [75.8, 8175.0], [75.9, 8284.0], [76.0, 8284.0], [76.1, 8452.0], [76.2, 8452.0], [76.3, 8516.0], [76.4, 8516.0], [76.5, 8633.0], [76.6, 8633.0], [76.7, 8642.0], [76.8, 8642.0], [76.9, 8653.0], [77.0, 8653.0], [77.1, 8802.0], [77.2, 8802.0], [77.3, 8876.0], [77.4, 8876.0], [77.5, 8935.0], [77.6, 8935.0], [77.7, 8954.0], [77.8, 8954.0], [77.9, 8966.0], [78.0, 8966.0], [78.1, 9016.0], [78.2, 9016.0], [78.3, 9158.0], [78.4, 9158.0], [78.5, 9235.0], [78.6, 9235.0], [78.7, 9262.0], [78.8, 9262.0], [78.9, 9393.0], [79.0, 9393.0], [79.1, 9439.0], [79.2, 9439.0], [79.3, 9481.0], [79.4, 9481.0], [79.5, 9531.0], [79.6, 9531.0], [79.7, 9592.0], [79.8, 9592.0], [79.9, 9595.0], [80.0, 9595.0], [80.1, 9728.0], [80.2, 9728.0], [80.3, 9767.0], [80.4, 9767.0], [80.5, 9793.0], [80.6, 9793.0], [80.7, 9801.0], [80.8, 9801.0], [80.9, 9854.0], [81.0, 9854.0], [81.1, 9907.0], [81.2, 9907.0], [81.3, 10001.0], [81.4, 10001.0], [81.5, 10047.0], [81.6, 10047.0], [81.7, 10191.0], [81.8, 10191.0], [81.9, 10279.0], [82.0, 10279.0], [82.1, 10304.0], [82.2, 10304.0], [82.3, 10357.0], [82.4, 10357.0], [82.5, 10528.0], [82.6, 10528.0], [82.7, 10607.0], [82.8, 10607.0], [82.9, 10635.0], [83.0, 10635.0], [83.1, 10658.0], [83.2, 10658.0], [83.3, 10722.0], [83.4, 10722.0], [83.5, 10786.0], [83.6, 10786.0], [83.7, 10819.0], [83.8, 10819.0], [83.9, 10947.0], [84.0, 10947.0], [84.1, 10993.0], [84.2, 10993.0], [84.3, 11017.0], [84.4, 11017.0], [84.5, 11045.0], [84.6, 11045.0], [84.7, 11094.0], [84.8, 11094.0], [84.9, 11102.0], [85.0, 11102.0], [85.1, 11759.0], [85.2, 11759.0], [85.3, 12068.0], [85.4, 12068.0], [85.5, 12202.0], [85.6, 12202.0], [85.7, 12508.0], [85.8, 12508.0], [85.9, 12532.0], [86.0, 12532.0], [86.1, 12711.0], [86.2, 12711.0], [86.3, 12841.0], [86.4, 12841.0], [86.5, 12857.0], [86.6, 12857.0], [86.7, 12915.0], [86.8, 12915.0], [86.9, 12963.0], [87.0, 12963.0], [87.1, 13218.0], [87.2, 13218.0], [87.3, 13323.0], [87.4, 13323.0], [87.5, 13668.0], [87.6, 13668.0], [87.7, 13799.0], [87.8, 13799.0], [87.9, 13919.0], [88.0, 13919.0], [88.1, 13949.0], [88.2, 13949.0], [88.3, 13963.0], [88.4, 13963.0], [88.5, 14043.0], [88.6, 14043.0], [88.7, 14245.0], [88.8, 14245.0], [88.9, 14261.0], [89.0, 14261.0], [89.1, 15556.0], [89.2, 15556.0], [89.3, 15813.0], [89.4, 15813.0], [89.5, 15865.0], [89.6, 15865.0], [89.7, 15879.0], [89.8, 15879.0], [89.9, 15962.0], [90.0, 15962.0], [90.1, 15967.0], [90.2, 15967.0], [90.3, 15992.0], [90.4, 15992.0], [90.5, 16049.0], [90.6, 16049.0], [90.7, 16121.0], [90.8, 16121.0], [90.9, 16159.0], [91.0, 16159.0], [91.1, 16319.0], [91.2, 16319.0], [91.3, 16526.0], [91.4, 16526.0], [91.5, 16618.0], [91.6, 16618.0], [91.7, 16623.0], [91.8, 16623.0], [91.9, 16784.0], [92.0, 16784.0], [92.1, 16837.0], [92.2, 16837.0], [92.3, 17125.0], [92.4, 17125.0], [92.5, 17257.0], [92.6, 17257.0], [92.7, 17726.0], [92.8, 17726.0], [92.9, 18021.0], [93.0, 18021.0], [93.1, 18131.0], [93.2, 18131.0], [93.3, 18795.0], [93.4, 18795.0], [93.5, 18943.0], [93.6, 18943.0], [93.7, 19124.0], [93.8, 19124.0], [93.9, 19160.0], [94.0, 19160.0], [94.1, 19308.0], [94.2, 19308.0], [94.3, 19317.0], [94.4, 19317.0], [94.5, 19319.0], [94.6, 19319.0], [94.7, 19463.0], [94.8, 19463.0], [94.9, 19610.0], [95.0, 19610.0], [95.1, 19732.0], [95.2, 19732.0], [95.3, 19775.0], [95.4, 19775.0], [95.5, 20634.0], [95.6, 20634.0], [95.7, 20808.0], [95.8, 20808.0], [95.9, 20950.0], [96.0, 20950.0], [96.1, 21030.0], [96.2, 21030.0], [96.3, 21536.0], [96.4, 21536.0], [96.5, 22372.0], [96.6, 22372.0], [96.7, 23769.0], [96.8, 23769.0], [96.9, 25440.0], [97.0, 25440.0], [97.1, 25534.0], [97.2, 25534.0], [97.3, 26119.0], [97.4, 26119.0], [97.5, 26402.0], [97.6, 26402.0], [97.7, 26415.0], [97.8, 26415.0], [97.9, 26558.0], [98.0, 26558.0], [98.1, 27609.0], [98.2, 27609.0], [98.3, 27667.0], [98.4, 27667.0], [98.5, 29730.0], [98.6, 29730.0], [98.7, 29876.0], [98.8, 29876.0], [98.9, 29885.0], [99.0, 29885.0], [99.1, 30068.0], [99.2, 30068.0], [99.3, 30583.0], [99.4, 30583.0], [99.5, 30920.0], [99.6, 30920.0], [99.7, 31544.0], [99.8, 31544.0], [99.9, 35117.0], [100.0, 35117.0]], "isOverall": false, "label": "HTTP 要求: Step2: Profile", "isController": false}, {"data": [[0.0, 35969.0], [0.1, 35969.0], [0.2, 36010.0], [0.3, 36010.0], [0.4, 38267.0], [0.5, 38267.0], [0.6, 38267.0], [0.7, 38312.0], [0.8, 39485.0], [0.9, 39485.0], [1.0, 39990.0], [1.1, 39990.0], [1.2, 40003.0], [1.3, 40003.0], [1.4, 40079.0], [1.5, 40079.0], [1.6, 40118.0], [1.7, 40118.0], [1.8, 40157.0], [1.9, 40157.0], [2.0, 40169.0], [2.1, 40169.0], [2.2, 40178.0], [2.3, 40178.0], [2.4, 40278.0], [2.5, 40278.0], [2.6, 40381.0], [2.7, 40381.0], [2.8, 40381.0], [2.9, 40393.0], [3.0, 40393.0], [3.1, 40442.0], [3.2, 40442.0], [3.3, 40459.0], [3.4, 40459.0], [3.5, 40467.0], [3.6, 40467.0], [3.7, 40489.0], [3.8, 40489.0], [3.9, 40514.0], [4.0, 40514.0], [4.1, 40522.0], [4.2, 40522.0], [4.3, 40554.0], [4.4, 40554.0], [4.5, 40586.0], [4.6, 40586.0], [4.7, 40588.0], [4.8, 40588.0], [4.9, 40620.0], [5.0, 40620.0], [5.1, 40622.0], [5.2, 40622.0], [5.3, 40625.0], [5.4, 40625.0], [5.5, 40641.0], [5.6, 40641.0], [5.7, 40651.0], [5.8, 40651.0], [5.9, 40654.0], [6.0, 40654.0], [6.1, 40671.0], [6.2, 40671.0], [6.3, 40671.0], [6.4, 40671.0], [6.5, 40688.0], [6.6, 40688.0], [6.7, 40707.0], [6.8, 40707.0], [6.9, 40707.0], [7.0, 40707.0], [7.1, 40745.0], [7.2, 40745.0], [7.3, 40750.0], [7.4, 40750.0], [7.5, 40751.0], [7.6, 40751.0], [7.7, 40770.0], [7.8, 40770.0], [7.9, 40792.0], [8.0, 40792.0], [8.1, 40808.0], [8.2, 40808.0], [8.3, 40818.0], [8.4, 40818.0], [8.5, 40848.0], [8.6, 40848.0], [8.7, 40902.0], [8.8, 40913.0], [8.9, 40913.0], [9.0, 40929.0], [9.1, 40929.0], [9.2, 40939.0], [9.3, 40939.0], [9.4, 40947.0], [9.5, 40947.0], [9.6, 40953.0], [9.7, 40953.0], [9.8, 40988.0], [9.9, 40988.0], [10.0, 40999.0], [10.1, 40999.0], [10.2, 41011.0], [10.3, 41011.0], [10.4, 41094.0], [10.5, 41094.0], [10.6, 41132.0], [10.7, 41132.0], [10.8, 41141.0], [10.9, 41141.0], [11.0, 41148.0], [11.1, 41148.0], [11.2, 41187.0], [11.3, 41187.0], [11.4, 41189.0], [11.5, 41189.0], [11.6, 41212.0], [11.7, 41212.0], [11.8, 41228.0], [11.9, 41228.0], [12.0, 41238.0], [12.1, 41238.0], [12.2, 41244.0], [12.3, 41244.0], [12.4, 41298.0], [12.5, 41298.0], [12.6, 41380.0], [12.7, 41380.0], [12.8, 41416.0], [12.9, 41416.0], [13.0, 41416.0], [13.1, 41416.0], [13.2, 41461.0], [13.3, 41461.0], [13.4, 41463.0], [13.5, 41463.0], [13.6, 41493.0], [13.7, 41493.0], [13.8, 41543.0], [13.9, 41543.0], [14.0, 41547.0], [14.1, 41547.0], [14.2, 41572.0], [14.3, 41572.0], [14.4, 41573.0], [14.5, 41573.0], [14.6, 41657.0], [14.7, 41657.0], [14.8, 41679.0], [14.9, 41679.0], [15.0, 41832.0], [15.1, 41832.0], [15.2, 41943.0], [15.3, 41943.0], [15.4, 42042.0], [15.5, 42042.0], [15.6, 42091.0], [15.7, 42091.0], [15.8, 42094.0], [15.9, 42094.0], [16.0, 42129.0], [16.1, 42129.0], [16.2, 42145.0], [16.3, 42145.0], [16.4, 42158.0], [16.5, 42158.0], [16.6, 42230.0], [16.7, 42230.0], [16.8, 42267.0], [16.9, 42267.0], [17.0, 42273.0], [17.1, 42273.0], [17.2, 42277.0], [17.3, 42277.0], [17.4, 42315.0], [17.5, 42315.0], [17.6, 42373.0], [17.7, 42373.0], [17.8, 42384.0], [17.9, 42384.0], [18.0, 42402.0], [18.1, 42402.0], [18.2, 42406.0], [18.3, 42406.0], [18.4, 42455.0], [18.5, 42455.0], [18.6, 42478.0], [18.7, 42478.0], [18.8, 42482.0], [18.9, 42482.0], [19.0, 42485.0], [19.1, 42485.0], [19.2, 42490.0], [19.3, 42490.0], [19.4, 42518.0], [19.5, 42518.0], [19.6, 42522.0], [19.7, 42522.0], [19.8, 42526.0], [19.9, 42526.0], [20.0, 42528.0], [20.1, 42528.0], [20.2, 42557.0], [20.3, 42557.0], [20.4, 42564.0], [20.5, 42564.0], [20.6, 42579.0], [20.7, 42579.0], [20.8, 42580.0], [20.9, 42580.0], [21.0, 42586.0], [21.1, 42586.0], [21.2, 42592.0], [21.3, 42592.0], [21.4, 42612.0], [21.5, 42612.0], [21.6, 42619.0], [21.7, 42619.0], [21.8, 42627.0], [21.9, 42627.0], [22.0, 42659.0], [22.1, 42659.0], [22.2, 42678.0], [22.3, 42678.0], [22.4, 42697.0], [22.5, 42697.0], [22.6, 42702.0], [22.7, 42702.0], [22.8, 42714.0], [22.9, 42714.0], [23.0, 42717.0], [23.1, 42717.0], [23.2, 42719.0], [23.3, 42719.0], [23.4, 42721.0], [23.5, 42721.0], [23.6, 42725.0], [23.7, 42725.0], [23.8, 42752.0], [23.9, 42752.0], [24.0, 42757.0], [24.1, 42757.0], [24.2, 42765.0], [24.3, 42765.0], [24.4, 42775.0], [24.5, 42775.0], [24.6, 42797.0], [24.7, 42797.0], [24.8, 42798.0], [24.9, 42798.0], [25.0, 42803.0], [25.1, 42803.0], [25.2, 42817.0], [25.3, 42817.0], [25.4, 42832.0], [25.5, 42832.0], [25.6, 42835.0], [25.7, 42835.0], [25.8, 42837.0], [25.9, 42837.0], [26.0, 42844.0], [26.1, 42844.0], [26.2, 42845.0], [26.3, 42845.0], [26.4, 42847.0], [26.5, 42847.0], [26.6, 42849.0], [26.7, 42849.0], [26.8, 42849.0], [26.9, 42849.0], [27.0, 42851.0], [27.1, 42851.0], [27.2, 42879.0], [27.3, 42879.0], [27.4, 42886.0], [27.5, 42886.0], [27.6, 42909.0], [27.7, 42909.0], [27.8, 42912.0], [27.9, 42912.0], [28.0, 42913.0], [28.1, 42913.0], [28.2, 42916.0], [28.3, 42916.0], [28.4, 42919.0], [28.5, 42919.0], [28.6, 42927.0], [28.7, 42927.0], [28.8, 42936.0], [28.9, 42936.0], [29.0, 42941.0], [29.1, 42941.0], [29.2, 42972.0], [29.3, 42972.0], [29.4, 42972.0], [29.5, 42972.0], [29.6, 42977.0], [29.7, 42977.0], [29.8, 42989.0], [29.9, 42989.0], [30.0, 43004.0], [30.1, 43004.0], [30.2, 43009.0], [30.3, 43009.0], [30.4, 43009.0], [30.5, 43009.0], [30.6, 43013.0], [30.7, 43013.0], [30.8, 43013.0], [30.9, 43013.0], [31.0, 43014.0], [31.1, 43014.0], [31.2, 43036.0], [31.3, 43036.0], [31.4, 43045.0], [31.5, 43045.0], [31.6, 43054.0], [31.7, 43054.0], [31.8, 43055.0], [31.9, 43055.0], [32.0, 43057.0], [32.1, 43057.0], [32.2, 43060.0], [32.3, 43060.0], [32.4, 43064.0], [32.5, 43064.0], [32.6, 43065.0], [32.7, 43065.0], [32.8, 43067.0], [32.9, 43067.0], [33.0, 43068.0], [33.1, 43068.0], [33.2, 43068.0], [33.3, 43068.0], [33.4, 43074.0], [33.5, 43074.0], [33.6, 43087.0], [33.7, 43087.0], [33.8, 43094.0], [33.9, 43094.0], [34.0, 43096.0], [34.1, 43096.0], [34.2, 43123.0], [34.3, 43123.0], [34.4, 43125.0], [34.5, 43125.0], [34.6, 43127.0], [34.7, 43127.0], [34.8, 43131.0], [34.9, 43131.0], [35.0, 43132.0], [35.1, 43132.0], [35.2, 43133.0], [35.3, 43133.0], [35.4, 43137.0], [35.5, 43137.0], [35.6, 43137.0], [35.7, 43137.0], [35.8, 43140.0], [35.9, 43140.0], [36.0, 43144.0], [36.1, 43144.0], [36.2, 43145.0], [36.3, 43145.0], [36.4, 43163.0], [36.5, 43163.0], [36.6, 43166.0], [36.7, 43166.0], [36.8, 43168.0], [36.9, 43168.0], [37.0, 43173.0], [37.1, 43173.0], [37.2, 43174.0], [37.3, 43174.0], [37.4, 43176.0], [37.5, 43176.0], [37.6, 43177.0], [37.7, 43177.0], [37.8, 43182.0], [37.9, 43182.0], [38.0, 43193.0], [38.1, 43193.0], [38.2, 43207.0], [38.3, 43207.0], [38.4, 43213.0], [38.5, 43213.0], [38.6, 43216.0], [38.7, 43216.0], [38.8, 43216.0], [38.9, 43216.0], [39.0, 43222.0], [39.1, 43222.0], [39.2, 43245.0], [39.3, 43245.0], [39.4, 43245.0], [39.5, 43250.0], [39.6, 43250.0], [39.7, 43253.0], [39.8, 43253.0], [39.9, 43258.0], [40.0, 43258.0], [40.1, 43259.0], [40.2, 43259.0], [40.3, 43264.0], [40.4, 43264.0], [40.5, 43265.0], [40.6, 43265.0], [40.7, 43266.0], [40.8, 43266.0], [40.9, 43266.0], [41.0, 43266.0], [41.1, 43269.0], [41.2, 43269.0], [41.3, 43278.0], [41.4, 43278.0], [41.5, 43281.0], [41.6, 43281.0], [41.7, 43287.0], [41.8, 43287.0], [41.9, 43298.0], [42.0, 43298.0], [42.1, 43307.0], [42.2, 43307.0], [42.3, 43310.0], [42.4, 43310.0], [42.5, 43311.0], [42.6, 43311.0], [42.7, 43314.0], [42.8, 43314.0], [42.9, 43314.0], [43.0, 43314.0], [43.1, 43317.0], [43.2, 43317.0], [43.3, 43328.0], [43.4, 43328.0], [43.5, 43345.0], [43.6, 43345.0], [43.7, 43352.0], [43.8, 43352.0], [43.9, 43359.0], [44.0, 43359.0], [44.1, 43368.0], [44.2, 43368.0], [44.3, 43370.0], [44.4, 43370.0], [44.5, 43376.0], [44.6, 43376.0], [44.7, 43384.0], [44.8, 43384.0], [44.9, 43397.0], [45.0, 43397.0], [45.1, 43407.0], [45.2, 43407.0], [45.3, 43410.0], [45.4, 43410.0], [45.5, 43410.0], [45.6, 43410.0], [45.7, 43415.0], [45.8, 43415.0], [45.9, 43428.0], [46.0, 43428.0], [46.1, 43432.0], [46.2, 43432.0], [46.3, 43458.0], [46.4, 43458.0], [46.5, 43464.0], [46.6, 43464.0], [46.7, 43467.0], [46.8, 43467.0], [46.9, 43470.0], [47.0, 43470.0], [47.1, 43482.0], [47.2, 43482.0], [47.3, 43487.0], [47.4, 43487.0], [47.5, 43490.0], [47.6, 43490.0], [47.7, 43491.0], [47.8, 43491.0], [47.9, 43492.0], [48.0, 43492.0], [48.1, 43497.0], [48.2, 43497.0], [48.3, 43498.0], [48.4, 43498.0], [48.5, 43523.0], [48.6, 43523.0], [48.7, 43535.0], [48.8, 43535.0], [48.9, 43546.0], [49.0, 43546.0], [49.1, 43549.0], [49.2, 43549.0], [49.3, 43549.0], [49.4, 43549.0], [49.5, 43559.0], [49.6, 43559.0], [49.7, 43567.0], [49.8, 43567.0], [49.9, 43571.0], [50.0, 43571.0], [50.1, 43585.0], [50.2, 43585.0], [50.3, 43593.0], [50.4, 43593.0], [50.5, 43595.0], [50.6, 43595.0], [50.7, 43595.0], [50.8, 43595.0], [50.9, 43609.0], [51.0, 43609.0], [51.1, 43614.0], [51.2, 43614.0], [51.3, 43615.0], [51.4, 43615.0], [51.5, 43619.0], [51.6, 43619.0], [51.7, 43624.0], [51.8, 43624.0], [51.9, 43649.0], [52.0, 43649.0], [52.1, 43661.0], [52.2, 43661.0], [52.3, 43668.0], [52.4, 43668.0], [52.5, 43692.0], [52.6, 43692.0], [52.7, 43692.0], [52.8, 43692.0], [52.9, 43695.0], [53.0, 43695.0], [53.1, 43726.0], [53.2, 43726.0], [53.3, 43776.0], [53.4, 43776.0], [53.5, 43783.0], [53.6, 43783.0], [53.7, 43793.0], [53.8, 43793.0], [53.9, 43798.0], [54.0, 43798.0], [54.1, 43801.0], [54.2, 43801.0], [54.3, 43802.0], [54.4, 43802.0], [54.5, 43804.0], [54.6, 43804.0], [54.7, 43812.0], [54.8, 43812.0], [54.9, 43817.0], [55.0, 43817.0], [55.1, 43829.0], [55.2, 43829.0], [55.3, 43842.0], [55.4, 43842.0], [55.5, 43843.0], [55.6, 43843.0], [55.7, 43880.0], [55.8, 43880.0], [55.9, 43893.0], [56.0, 43893.0], [56.1, 43911.0], [56.2, 43911.0], [56.3, 43924.0], [56.4, 43924.0], [56.5, 43931.0], [56.6, 43931.0], [56.7, 43935.0], [56.8, 43935.0], [56.9, 43976.0], [57.0, 43976.0], [57.1, 43982.0], [57.2, 43982.0], [57.3, 43984.0], [57.4, 43984.0], [57.5, 44017.0], [57.6, 44017.0], [57.7, 44028.0], [57.8, 44028.0], [57.9, 44038.0], [58.0, 44038.0], [58.1, 44048.0], [58.2, 44048.0], [58.3, 44050.0], [58.4, 44050.0], [58.5, 44116.0], [58.6, 44116.0], [58.7, 44124.0], [58.8, 44124.0], [58.9, 44127.0], [59.0, 44127.0], [59.1, 44161.0], [59.2, 44161.0], [59.3, 44203.0], [59.4, 44203.0], [59.5, 44234.0], [59.6, 44234.0], [59.7, 44277.0], [59.8, 44277.0], [59.9, 44285.0], [60.0, 44285.0], [60.1, 44286.0], [60.2, 44286.0], [60.3, 44290.0], [60.4, 44290.0], [60.5, 44301.0], [60.6, 44301.0], [60.7, 44404.0], [60.8, 44404.0], [60.9, 44406.0], [61.0, 44406.0], [61.1, 44415.0], [61.2, 44415.0], [61.3, 44423.0], [61.4, 44423.0], [61.5, 44444.0], [61.6, 44444.0], [61.7, 44486.0], [61.8, 44486.0], [61.9, 44490.0], [62.0, 44490.0], [62.1, 44491.0], [62.2, 44491.0], [62.3, 44494.0], [62.4, 44494.0], [62.5, 44495.0], [62.6, 44495.0], [62.7, 44514.0], [62.8, 44514.0], [62.9, 44543.0], [63.0, 44543.0], [63.1, 44544.0], [63.2, 44544.0], [63.3, 44564.0], [63.4, 44564.0], [63.5, 44596.0], [63.6, 44596.0], [63.7, 44650.0], [63.8, 44650.0], [63.9, 44685.0], [64.0, 44685.0], [64.1, 44687.0], [64.2, 44687.0], [64.3, 44723.0], [64.4, 44723.0], [64.5, 44746.0], [64.6, 44746.0], [64.7, 44759.0], [64.8, 44759.0], [64.9, 44772.0], [65.0, 44772.0], [65.1, 44779.0], [65.2, 44779.0], [65.3, 44784.0], [65.4, 44784.0], [65.5, 44794.0], [65.6, 44794.0], [65.7, 44828.0], [65.8, 44828.0], [65.9, 44840.0], [66.0, 44840.0], [66.1, 44888.0], [66.2, 44888.0], [66.3, 44898.0], [66.4, 44898.0], [66.5, 44931.0], [66.6, 44931.0], [66.7, 44953.0], [66.8, 44953.0], [66.9, 44966.0], [67.0, 44966.0], [67.1, 44974.0], [67.2, 44974.0], [67.3, 44980.0], [67.4, 44980.0], [67.5, 44990.0], [67.6, 44990.0], [67.7, 45003.0], [67.8, 45003.0], [67.9, 45015.0], [68.0, 45015.0], [68.1, 45022.0], [68.2, 45022.0], [68.3, 45035.0], [68.4, 45035.0], [68.5, 45077.0], [68.6, 45077.0], [68.7, 45079.0], [68.8, 45079.0], [68.9, 45108.0], [69.0, 45108.0], [69.1, 45111.0], [69.2, 45111.0], [69.3, 45219.0], [69.4, 45219.0], [69.5, 45239.0], [69.6, 45239.0], [69.7, 45308.0], [69.8, 45308.0], [69.9, 45407.0], [70.0, 45407.0], [70.1, 45468.0], [70.2, 45468.0], [70.3, 45559.0], [70.4, 45559.0], [70.5, 45585.0], [70.6, 45585.0], [70.7, 45602.0], [70.8, 45602.0], [70.9, 45650.0], [71.0, 45650.0], [71.1, 45706.0], [71.2, 45706.0], [71.3, 45720.0], [71.4, 45720.0], [71.5, 45740.0], [71.6, 45740.0], [71.7, 45748.0], [71.8, 45748.0], [71.9, 45770.0], [72.0, 45770.0], [72.1, 45823.0], [72.2, 45823.0], [72.3, 45903.0], [72.4, 45903.0], [72.5, 45916.0], [72.6, 45916.0], [72.7, 45947.0], [72.8, 45947.0], [72.9, 45956.0], [73.0, 45956.0], [73.1, 46004.0], [73.2, 46004.0], [73.3, 46036.0], [73.4, 46036.0], [73.5, 46056.0], [73.6, 46056.0], [73.7, 46082.0], [73.8, 46082.0], [73.9, 46105.0], [74.0, 46105.0], [74.1, 46111.0], [74.2, 46111.0], [74.3, 46118.0], [74.4, 46118.0], [74.5, 46163.0], [74.6, 46163.0], [74.7, 46238.0], [74.8, 46238.0], [74.9, 46281.0], [75.0, 46281.0], [75.1, 46281.0], [75.2, 46281.0], [75.3, 46289.0], [75.4, 46289.0], [75.5, 46340.0], [75.6, 46340.0], [75.7, 46342.0], [75.8, 46342.0], [75.9, 46361.0], [76.0, 46361.0], [76.1, 46366.0], [76.2, 46366.0], [76.3, 46446.0], [76.4, 46446.0], [76.5, 46476.0], [76.6, 46476.0], [76.7, 46535.0], [76.8, 46535.0], [76.9, 46545.0], [77.0, 46545.0], [77.1, 46549.0], [77.2, 46549.0], [77.3, 46551.0], [77.4, 46551.0], [77.5, 46563.0], [77.6, 46563.0], [77.7, 46575.0], [77.8, 46575.0], [77.9, 46629.0], [78.0, 46629.0], [78.1, 46638.0], [78.2, 46638.0], [78.3, 46647.0], [78.4, 46647.0], [78.5, 46649.0], [78.6, 46649.0], [78.7, 46691.0], [78.8, 46691.0], [78.9, 46711.0], [79.0, 46711.0], [79.1, 46731.0], [79.2, 46731.0], [79.3, 46759.0], [79.4, 46759.0], [79.5, 46806.0], [79.6, 46806.0], [79.7, 46811.0], [79.8, 46811.0], [79.9, 46818.0], [80.0, 46818.0], [80.1, 46829.0], [80.2, 46829.0], [80.3, 46879.0], [80.4, 46879.0], [80.5, 46915.0], [80.6, 46915.0], [80.7, 46935.0], [80.8, 46935.0], [80.9, 46943.0], [81.0, 46943.0], [81.1, 46973.0], [81.2, 46973.0], [81.3, 47068.0], [81.4, 47068.0], [81.5, 47094.0], [81.6, 47094.0], [81.7, 47153.0], [81.8, 47153.0], [81.9, 47180.0], [82.0, 47180.0], [82.1, 47245.0], [82.2, 47245.0], [82.3, 47326.0], [82.4, 47326.0], [82.5, 48106.0], [82.6, 48106.0], [82.7, 48440.0], [82.8, 48440.0], [82.9, 48504.0], [83.0, 48504.0], [83.1, 48581.0], [83.2, 48581.0], [83.3, 48675.0], [83.4, 48675.0], [83.5, 48727.0], [83.6, 48727.0], [83.7, 48775.0], [83.8, 48775.0], [83.9, 48776.0], [84.0, 48776.0], [84.1, 48845.0], [84.2, 48845.0], [84.3, 48849.0], [84.4, 48849.0], [84.5, 48885.0], [84.6, 48885.0], [84.7, 48899.0], [84.8, 48899.0], [84.9, 48902.0], [85.0, 48902.0], [85.1, 48940.0], [85.2, 48940.0], [85.3, 48946.0], [85.4, 48946.0], [85.5, 48966.0], [85.6, 48966.0], [85.7, 49068.0], [85.8, 49068.0], [85.9, 49071.0], [86.0, 49071.0], [86.1, 49075.0], [86.2, 49075.0], [86.3, 49094.0], [86.4, 49094.0], [86.5, 49161.0], [86.6, 49161.0], [86.7, 49247.0], [86.8, 49247.0], [86.9, 49250.0], [87.0, 49250.0], [87.1, 49295.0], [87.2, 49295.0], [87.3, 49334.0], [87.4, 49334.0], [87.5, 49338.0], [87.6, 49338.0], [87.7, 49491.0], [87.8, 49491.0], [87.9, 51154.0], [88.0, 51154.0], [88.1, 51322.0], [88.2, 51322.0], [88.3, 51398.0], [88.4, 51398.0], [88.5, 51408.0], [88.6, 51408.0], [88.7, 51501.0], [88.8, 51501.0], [88.9, 51530.0], [89.0, 51530.0], [89.1, 51537.0], [89.2, 51537.0], [89.3, 51542.0], [89.4, 51542.0], [89.5, 51551.0], [89.6, 51551.0], [89.7, 51711.0], [89.8, 51711.0], [89.9, 51777.0], [90.0, 51777.0], [90.1, 51850.0], [90.2, 51850.0], [90.3, 51875.0], [90.4, 51875.0], [90.5, 52028.0], [90.6, 52028.0], [90.7, 53345.0], [90.8, 53345.0], [90.9, 53362.0], [91.0, 53362.0], [91.1, 53406.0], [91.2, 53406.0], [91.3, 53607.0], [91.4, 53607.0], [91.5, 53673.0], [91.6, 53673.0], [91.7, 53746.0], [91.8, 53746.0], [91.9, 53756.0], [92.0, 53756.0], [92.1, 53913.0], [92.2, 53913.0], [92.3, 55664.0], [92.4, 55664.0], [92.5, 56222.0], [92.6, 56222.0], [92.7, 56235.0], [92.8, 56235.0], [92.9, 56506.0], [93.0, 56506.0], [93.1, 56550.0], [93.2, 56550.0], [93.3, 56586.0], [93.4, 56586.0], [93.5, 56652.0], [93.6, 56652.0], [93.7, 57096.0], [93.8, 57096.0], [93.9, 58470.0], [94.0, 58470.0], [94.1, 59368.0], [94.2, 59368.0], [94.3, 59401.0], [94.4, 59401.0], [94.5, 59455.0], [94.6, 59455.0], [94.7, 59511.0], [94.8, 59511.0], [94.9, 62036.0], [95.0, 62036.0], [95.1, 65330.0], [95.2, 65330.0], [95.3, 65594.0], [95.4, 65594.0], [95.5, 65681.0], [95.6, 65681.0], [95.7, 66022.0], [95.8, 66022.0], [95.9, 66079.0], [96.0, 66079.0], [96.1, 66082.0], [96.2, 66082.0], [96.3, 66086.0], [96.4, 66086.0], [96.5, 68618.0], [96.6, 68618.0], [96.7, 69875.0], [96.8, 69875.0], [96.9, 69938.0], [97.0, 69938.0], [97.1, 70351.0], [97.2, 70351.0], [97.3, 70559.0], [97.4, 70559.0], [97.5, 73157.0], [97.6, 73157.0], [97.7, 74224.0], [97.8, 74224.0], [97.9, 74235.0], [98.0, 74235.0], [98.1, 74235.0], [98.2, 74235.0], [98.3, 74475.0], [98.4, 74475.0], [98.5, 74475.0], [98.6, 74475.0], [98.7, 74538.0], [98.8, 74538.0], [98.9, 74554.0], [99.0, 74554.0], [99.1, 74608.0], [99.2, 74608.0], [99.3, 74783.0], [99.4, 74783.0], [99.5, 74846.0], [99.6, 74846.0], [99.7, 75231.0], [99.8, 75231.0], [99.9, 76409.0], [100.0, 76409.0]], "isOverall": false, "label": "HTTP 要求: Step1: Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 21.0, "series": [{"data": [[32900.0, 2.0], [35700.0, 1.0], [500.0, 1.0], [3100.0, 3.0], [3300.0, 8.0], [3200.0, 2.0], [4100.0, 1.0], [5100.0, 3.0], [5200.0, 1.0], [5300.0, 5.0], [5500.0, 1.0], [5400.0, 3.0], [5600.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [5900.0, 1.0], [6400.0, 3.0], [6500.0, 2.0], [6700.0, 3.0], [7100.0, 1.0], [7900.0, 2.0], [8400.0, 1.0], [8200.0, 2.0], [8300.0, 1.0], [9200.0, 3.0], [8800.0, 3.0], [9100.0, 2.0], [9000.0, 1.0], [8900.0, 1.0], [9300.0, 1.0], [9600.0, 5.0], [9500.0, 3.0], [9700.0, 1.0], [10100.0, 1.0], [9900.0, 4.0], [9800.0, 2.0], [10700.0, 5.0], [10400.0, 2.0], [10500.0, 2.0], [10300.0, 3.0], [11000.0, 8.0], [10900.0, 5.0], [11100.0, 6.0], [10800.0, 4.0], [11300.0, 1.0], [11700.0, 6.0], [11400.0, 1.0], [11500.0, 1.0], [11600.0, 2.0], [11800.0, 3.0], [11900.0, 1.0], [12000.0, 2.0], [12100.0, 2.0], [12200.0, 1.0], [12400.0, 1.0], [12600.0, 3.0], [12500.0, 1.0], [13300.0, 3.0], [13100.0, 2.0], [12800.0, 1.0], [13000.0, 1.0], [13800.0, 5.0], [13600.0, 7.0], [13400.0, 1.0], [13700.0, 8.0], [13500.0, 1.0], [13900.0, 9.0], [14000.0, 7.0], [14100.0, 5.0], [14200.0, 5.0], [14600.0, 5.0], [14400.0, 2.0], [14800.0, 1.0], [14500.0, 1.0], [14700.0, 1.0], [14900.0, 2.0], [15100.0, 1.0], [15300.0, 1.0], [15400.0, 3.0], [15500.0, 2.0], [15700.0, 2.0], [16200.0, 3.0], [16300.0, 7.0], [15900.0, 4.0], [16100.0, 2.0], [16000.0, 2.0], [17200.0, 1.0], [17400.0, 1.0], [16600.0, 5.0], [16400.0, 2.0], [16800.0, 4.0], [17000.0, 2.0], [17600.0, 2.0], [17800.0, 2.0], [18200.0, 1.0], [18000.0, 2.0], [18400.0, 2.0], [18600.0, 3.0], [19000.0, 6.0], [18800.0, 2.0], [19200.0, 4.0], [19600.0, 1.0], [19800.0, 4.0], [20200.0, 3.0], [20000.0, 1.0], [20400.0, 2.0], [21200.0, 2.0], [21000.0, 7.0], [20800.0, 2.0], [20600.0, 3.0], [22000.0, 2.0], [22200.0, 1.0], [21800.0, 2.0], [22400.0, 2.0], [23400.0, 3.0], [23200.0, 3.0], [23000.0, 5.0], [22600.0, 3.0], [22800.0, 1.0], [24000.0, 1.0], [24200.0, 1.0], [24400.0, 1.0], [23800.0, 1.0], [25400.0, 4.0], [26600.0, 2.0], [25800.0, 4.0], [25600.0, 1.0], [26400.0, 1.0], [26000.0, 1.0], [27400.0, 2.0], [27600.0, 2.0], [28200.0, 1.0], [28000.0, 1.0], [27800.0, 2.0], [29600.0, 4.0], [30200.0, 2.0], [30000.0, 2.0], [29800.0, 2.0], [30600.0, 3.0], [30800.0, 3.0], [31200.0, 2.0], [31000.0, 2.0], [32600.0, 2.0], [33200.0, 1.0], [35600.0, 2.0], [33100.0, 1.0], [33500.0, 1.0], [35900.0, 1.0], [16700.0, 6.0], [17300.0, 2.0], [16900.0, 7.0], [16500.0, 1.0], [17100.0, 5.0], [17500.0, 2.0], [17900.0, 6.0], [18100.0, 2.0], [17700.0, 2.0], [18500.0, 6.0], [18700.0, 2.0], [19300.0, 1.0], [18900.0, 2.0], [19100.0, 1.0], [19700.0, 3.0], [20100.0, 1.0], [19900.0, 1.0], [20300.0, 1.0], [21300.0, 2.0], [20700.0, 4.0], [21500.0, 2.0], [21100.0, 4.0], [20500.0, 6.0], [21700.0, 4.0], [22300.0, 1.0], [22500.0, 3.0], [22100.0, 1.0], [21900.0, 1.0], [22700.0, 1.0], [23100.0, 2.0], [23300.0, 2.0], [22900.0, 2.0], [23500.0, 1.0], [24100.0, 2.0], [23700.0, 1.0], [24900.0, 4.0], [25500.0, 3.0], [25100.0, 2.0], [24700.0, 1.0], [25300.0, 1.0], [26500.0, 1.0], [26100.0, 2.0], [25900.0, 1.0], [26700.0, 1.0], [27100.0, 1.0], [27500.0, 1.0], [27700.0, 3.0], [27900.0, 2.0], [28700.0, 1.0], [29500.0, 1.0], [29700.0, 1.0], [30700.0, 2.0], [30500.0, 1.0], [29900.0, 1.0], [30300.0, 1.0], [30100.0, 1.0], [30900.0, 2.0], [31500.0, 1.0], [31100.0, 2.0], [32500.0, 1.0], [36600.0, 1.0], [35000.0, 1.0]], "isOverall": false, "label": "HTTP 要求: Step3: Change Avatar", "isController": false}, {"data": [[0.0, 1.0], [35100.0, 1.0], [200.0, 2.0], [300.0, 5.0], [400.0, 7.0], [500.0, 8.0], [600.0, 11.0], [700.0, 12.0], [800.0, 14.0], [900.0, 8.0], [1000.0, 8.0], [1100.0, 11.0], [1200.0, 9.0], [1300.0, 6.0], [1400.0, 4.0], [1500.0, 3.0], [1600.0, 6.0], [1700.0, 7.0], [1800.0, 9.0], [1900.0, 14.0], [2000.0, 16.0], [2100.0, 7.0], [2200.0, 8.0], [2300.0, 13.0], [2400.0, 5.0], [2500.0, 10.0], [2600.0, 11.0], [2800.0, 9.0], [2700.0, 9.0], [2900.0, 9.0], [3000.0, 4.0], [3100.0, 9.0], [3300.0, 2.0], [3200.0, 4.0], [3400.0, 3.0], [3500.0, 3.0], [3600.0, 4.0], [3700.0, 4.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 4.0], [4300.0, 7.0], [4200.0, 8.0], [4100.0, 1.0], [4500.0, 2.0], [4400.0, 2.0], [4600.0, 4.0], [4800.0, 5.0], [4700.0, 2.0], [4900.0, 1.0], [5000.0, 2.0], [5100.0, 1.0], [5300.0, 3.0], [5500.0, 2.0], [5400.0, 1.0], [5600.0, 2.0], [5700.0, 6.0], [5800.0, 5.0], [6100.0, 3.0], [6000.0, 1.0], [6200.0, 1.0], [6300.0, 2.0], [6400.0, 1.0], [6800.0, 2.0], [6900.0, 7.0], [6700.0, 1.0], [7100.0, 1.0], [7000.0, 2.0], [7300.0, 3.0], [7400.0, 2.0], [7500.0, 4.0], [7600.0, 2.0], [7700.0, 2.0], [7900.0, 2.0], [7800.0, 1.0], [8100.0, 3.0], [8500.0, 1.0], [8600.0, 3.0], [8200.0, 1.0], [8400.0, 1.0], [8800.0, 2.0], [9200.0, 2.0], [8900.0, 3.0], [9000.0, 1.0], [9100.0, 1.0], [9700.0, 3.0], [9500.0, 3.0], [9400.0, 2.0], [9300.0, 1.0], [10100.0, 1.0], [9800.0, 2.0], [10200.0, 1.0], [10000.0, 2.0], [9900.0, 1.0], [10600.0, 3.0], [10700.0, 2.0], [10300.0, 2.0], [10500.0, 1.0], [11000.0, 3.0], [10900.0, 2.0], [10800.0, 1.0], [11100.0, 1.0], [11700.0, 1.0], [12200.0, 1.0], [12000.0, 1.0], [12700.0, 1.0], [12500.0, 2.0], [12900.0, 2.0], [12800.0, 2.0], [13200.0, 1.0], [13300.0, 1.0], [13600.0, 1.0], [13700.0, 1.0], [13900.0, 3.0], [14000.0, 1.0], [14200.0, 2.0], [15500.0, 1.0], [15800.0, 3.0], [15900.0, 3.0], [16100.0, 2.0], [16000.0, 1.0], [16300.0, 1.0], [16500.0, 1.0], [17100.0, 1.0], [16600.0, 2.0], [17200.0, 1.0], [16800.0, 1.0], [16700.0, 1.0], [17700.0, 1.0], [18000.0, 1.0], [18100.0, 1.0], [19300.0, 3.0], [19100.0, 2.0], [18700.0, 1.0], [19400.0, 1.0], [18900.0, 1.0], [19600.0, 1.0], [19700.0, 2.0], [21500.0, 1.0], [20900.0, 1.0], [21000.0, 1.0], [20800.0, 1.0], [20600.0, 1.0], [22300.0, 1.0], [23700.0, 1.0], [25400.0, 1.0], [25500.0, 1.0], [26400.0, 2.0], [26100.0, 1.0], [26500.0, 1.0], [27600.0, 2.0], [29700.0, 1.0], [29800.0, 2.0], [30500.0, 1.0], [30000.0, 1.0], [30900.0, 1.0], [31500.0, 1.0]], "isOverall": false, "label": "HTTP 要求: Step2: Profile", "isController": false}, {"data": [[69900.0, 1.0], [70300.0, 1.0], [73100.0, 1.0], [74700.0, 1.0], [35900.0, 1.0], [38300.0, 1.0], [39900.0, 1.0], [40100.0, 4.0], [40500.0, 5.0], [40700.0, 7.0], [40900.0, 8.0], [40300.0, 2.0], [42700.0, 12.0], [41100.0, 5.0], [42900.0, 12.0], [42500.0, 10.0], [41500.0, 4.0], [41900.0, 1.0], [41300.0, 1.0], [42100.0, 3.0], [42300.0, 3.0], [44700.0, 7.0], [43100.0, 20.0], [43300.0, 15.0], [43500.0, 12.0], [44900.0, 6.0], [44100.0, 4.0], [44300.0, 1.0], [44500.0, 5.0], [43700.0, 5.0], [43900.0, 7.0], [46700.0, 3.0], [45100.0, 2.0], [45300.0, 1.0], [45500.0, 2.0], [47100.0, 2.0], [46900.0, 4.0], [45700.0, 5.0], [45900.0, 4.0], [46100.0, 4.0], [46300.0, 4.0], [46500.0, 6.0], [48700.0, 3.0], [47300.0, 1.0], [48100.0, 1.0], [48500.0, 2.0], [48900.0, 4.0], [49100.0, 1.0], [49300.0, 2.0], [51100.0, 1.0], [51300.0, 2.0], [51500.0, 5.0], [51700.0, 2.0], [53300.0, 2.0], [53700.0, 2.0], [53900.0, 1.0], [56500.0, 3.0], [59300.0, 1.0], [59500.0, 1.0], [65300.0, 1.0], [65500.0, 1.0], [68600.0, 1.0], [69800.0, 1.0], [74200.0, 3.0], [74600.0, 1.0], [70500.0, 1.0], [74500.0, 2.0], [36000.0, 1.0], [38200.0, 1.0], [40600.0, 9.0], [39400.0, 1.0], [40000.0, 2.0], [40800.0, 3.0], [40200.0, 1.0], [40400.0, 4.0], [42600.0, 6.0], [41200.0, 5.0], [41000.0, 2.0], [41400.0, 5.0], [42800.0, 13.0], [43000.0, 21.0], [41600.0, 2.0], [41800.0, 1.0], [42000.0, 3.0], [42200.0, 4.0], [42400.0, 7.0], [43400.0, 17.0], [43200.0, 19.0], [44800.0, 4.0], [45000.0, 6.0], [44600.0, 3.0], [44200.0, 6.0], [44400.0, 10.0], [43600.0, 11.0], [43800.0, 10.0], [44000.0, 5.0], [45200.0, 2.0], [46000.0, 4.0], [45400.0, 2.0], [46800.0, 5.0], [47000.0, 2.0], [46600.0, 5.0], [45800.0, 1.0], [46200.0, 4.0], [46400.0, 2.0], [45600.0, 2.0], [47200.0, 1.0], [48600.0, 1.0], [48400.0, 1.0], [48800.0, 4.0], [49000.0, 4.0], [49200.0, 3.0], [49400.0, 1.0], [51800.0, 2.0], [52000.0, 1.0], [51400.0, 1.0], [53600.0, 2.0], [53400.0, 1.0], [55600.0, 1.0], [56200.0, 2.0], [56600.0, 1.0], [57000.0, 1.0], [58400.0, 1.0], [59400.0, 2.0], [62000.0, 1.0], [66000.0, 4.0], [65600.0, 1.0], [74400.0, 2.0], [74800.0, 1.0], [75200.0, 1.0], [76400.0, 1.0]], "isOverall": false, "label": "HTTP 要求: Step1: Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 76400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1393.0, "series": [{"data": [[0.0, 15.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 92.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1393.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 126.86971830985901, "minX": 1.67929986E12, "maxY": 458.48190789473665, "series": [{"data": [[1.67929992E12, 126.86971830985901], [1.67929986E12, 458.48190789473665]], "isOverall": false, "label": "執行緒群組", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67929992E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 345.0, "minX": 1.0, "maxY": 76409.0, "series": [{"data": [[2.0, 3336.0], [3.0, 3387.0], [4.0, 3382.0], [5.0, 3395.0], [7.0, 4482.0], [8.0, 3256.0], [9.0, 9966.0], [11.0, 10333.0], [12.0, 3341.0], [13.0, 5411.0], [14.0, 3310.0], [17.0, 5399.0], [20.0, 6190.0], [22.0, 9739.0], [25.0, 9110.0], [26.0, 17133.0], [27.0, 5360.0], [29.0, 4270.5], [30.0, 9664.0], [31.0, 3195.0], [33.0, 14491.0], [32.0, 23528.0], [35.0, 20353.0], [37.0, 5226.0], [36.0, 13974.0], [39.0, 25898.0], [38.0, 32929.0], [41.0, 20389.0], [43.0, 18441.0], [46.0, 19268.0], [49.0, 25958.0], [48.0, 9601.0], [51.0, 23088.0], [50.0, 35736.0], [53.0, 13555.0], [52.0, 16843.0], [56.0, 16831.666666666664], [59.0, 23928.666666666664], [61.0, 13298.5], [63.0, 21435.5], [66.0, 36662.0], [65.0, 16382.0], [71.0, 11159.0], [70.0, 27683.0], [69.0, 26654.0], [68.0, 22277.5], [75.0, 32950.0], [74.0, 11174.0], [73.0, 11940.5], [79.0, 33531.0], [78.0, 20229.0], [77.0, 32597.0], [76.0, 11058.0], [83.0, 27892.0], [82.0, 10542.0], [87.0, 19652.5], [85.0, 14202.0], [84.0, 27858.0], [91.0, 10979.0], [90.0, 22790.666666666668], [95.0, 19351.0], [94.0, 27964.0], [92.0, 10871.0], [99.0, 14050.0], [98.0, 13711.0], [97.0, 23040.0], [96.0, 17043.0], [103.0, 22603.5], [101.0, 16951.0], [100.0, 27730.0], [106.0, 22970.0], [105.0, 17156.5], [110.0, 33138.0], [108.0, 18111.0], [115.0, 32665.0], [114.0, 26434.0], [112.0, 14997.666666666666], [119.0, 24923.0], [118.0, 14158.0], [117.0, 20514.5], [123.0, 20816.5], [121.0, 19702.0], [127.0, 13990.0], [126.0, 14137.0], [125.0, 13885.0], [124.0, 24769.0], [135.0, 11582.0], [133.0, 29918.0], [132.0, 22929.0], [131.0, 10934.0], [130.0, 16844.0], [129.0, 11103.0], [128.0, 13874.0], [143.0, 14018.5], [141.0, 29678.0], [140.0, 10710.0], [139.0, 13797.0], [138.0, 10742.0], [137.0, 10913.0], [136.0, 14051.0], [151.0, 24124.0], [150.0, 22639.0], [149.0, 10903.0], [148.0, 22082.5], [146.0, 25605.333333333332], [159.0, 25461.0], [158.0, 12049.0], [157.0, 22840.0], [156.0, 30597.0], [155.0, 31124.0], [154.0, 21106.0], [153.0, 26153.0], [152.0, 23805.0], [167.0, 19218.5], [165.0, 30696.5], [163.0, 25436.0], [162.0, 29699.0], [161.0, 25506.0], [160.0, 11875.0], [175.0, 14751.0], [174.0, 31256.0], [173.0, 17915.0], [172.0, 18349.5], [170.0, 31555.0], [169.0, 29707.0], [183.0, 20757.0], [182.0, 30926.0], [181.0, 11853.0], [180.0, 11647.0], [179.0, 17959.0], [178.0, 28668.5], [176.0, 20794.0], [188.0, 14509.0], [187.0, 27486.0], [186.0, 31025.0], [185.0, 20844.0], [184.0, 20689.0], [199.0, 20545.0], [198.0, 25123.0], [197.0, 28097.0], [196.0, 30025.0], [195.0, 25394.0], [193.0, 19076.6], [206.0, 27790.666666666668], [203.0, 17991.0], [202.0, 16650.0], [201.0, 18656.0], [215.0, 14884.0], [214.0, 24670.5], [212.0, 30855.0], [211.0, 17909.0], [210.0, 11701.0], [209.0, 30777.0], [208.0, 19164.0], [223.0, 20566.0], [222.0, 20726.5], [220.0, 25402.0], [219.0, 20442.0], [218.0, 26444.5], [216.0, 31221.0], [231.0, 26410.0], [230.0, 14071.0], [229.0, 21266.0], [227.0, 28251.0], [226.0, 20460.0], [225.0, 30814.0], [224.0, 20638.0], [239.0, 18182.0], [238.0, 17743.0], [237.0, 13908.0], [236.0, 13763.0], [235.0, 16670.0], [234.0, 17177.0], [233.0, 27571.0], [232.0, 15448.0], [246.0, 25426.0], [245.0, 16367.0], [244.0, 18500.0], [243.0, 23488.0], [242.0, 25038.0], [240.0, 21240.0], [255.0, 13668.0], [254.0, 25558.0], [253.0, 23309.0], [252.0, 23444.0], [251.0, 18768.0], [250.0, 23035.0], [249.0, 18449.0], [248.0, 19817.5], [268.0, 20479.666666666668], [270.0, 25535.0], [271.0, 26113.0], [269.0, 23330.0], [265.0, 23105.0], [264.0, 15985.5], [262.0, 22372.5], [260.0, 19464.666666666668], [257.0, 25857.0], [256.0, 25859.0], [286.0, 24939.0], [287.0, 27114.0], [285.0, 19726.5], [275.0, 17580.0], [274.0, 24211.0], [273.0, 16054.0], [272.0, 14667.0], [283.0, 16216.5], [281.0, 23153.0], [280.0, 16384.0], [279.0, 21014.0], [278.0, 18704.5], [276.0, 26510.0], [302.0, 19932.0], [303.0, 16971.0], [301.0, 21331.0], [300.0, 22494.0], [299.0, 13782.0], [298.0, 18403.0], [296.0, 22997.0], [294.0, 18648.0], [289.0, 26724.0], [288.0, 17460.0], [291.0, 24130.0], [290.0, 24099.0], [293.0, 21063.0], [292.0, 20849.0], [306.0, 15781.0], [317.0, 19206.0], [318.0, 14129.0], [316.0, 18579.0], [313.0, 12106.0], [312.0, 20077.0], [311.0, 17646.75], [308.0, 17011.0], [305.0, 14226.0], [304.0, 19260.0], [333.0, 20547.0], [332.0, 15609.5], [330.0, 14207.0], [329.0, 17723.8], [324.0, 17981.5], [322.0, 20594.0], [321.0, 16738.0], [320.0, 20045.0], [350.0, 18870.0], [351.0, 21535.0], [349.0, 21221.0], [348.0, 21006.0], [347.0, 9569.0], [346.0, 16405.0], [345.0, 14065.0], [343.0, 20522.2], [339.0, 19403.5], [337.0, 20708.5], [340.0, 22515.0], [354.0, 19831.0], [367.0, 20259.0], [365.0, 17398.333333333332], [362.0, 17892.0], [360.0, 16529.0], [359.0, 21382.0], [358.0, 21785.0], [357.0, 21581.0], [356.0, 19625.5], [353.0, 18996.0], [352.0, 13929.0], [382.0, 18875.0], [383.0, 19733.0], [381.0, 16926.0], [380.0, 19295.0], [379.0, 11174.0], [378.0, 17060.5], [376.0, 14925.0], [375.0, 18046.0], [369.0, 22047.0], [368.0, 22281.0], [371.0, 21729.0], [370.0, 16411.0], [374.0, 19803.0], [373.0, 18459.0], [372.0, 12647.0], [398.0, 16794.0], [399.0, 19723.0], [397.0, 17819.0], [396.0, 18593.0], [395.0, 18229.0], [394.0, 19059.0], [393.0, 13732.0], [392.0, 19011.0], [391.0, 11085.0], [384.0, 13601.0], [387.0, 19367.0], [386.0, 16311.5], [390.0, 18052.0], [389.0, 15858.0], [414.0, 19014.0], [415.0, 18606.0], [413.0, 19002.0], [412.0, 14410.0], [411.0, 12309.5], [409.0, 16760.0], [408.0, 18718.5], [406.0, 8862.0], [400.0, 19840.0], [403.0, 17686.0], [402.0, 15271.5], [405.0, 17302.0], [404.0, 15394.0], [430.0, 11456.0], [431.0, 16331.0], [429.0, 13614.0], [428.0, 13043.0], [427.0, 14968.0], [426.0, 15903.0], [425.0, 15907.0], [424.0, 17211.0], [423.0, 15125.0], [417.0, 17538.0], [416.0, 18546.0], [419.0, 14642.0], [418.0, 15542.0], [422.0, 13853.0], [421.0, 13142.0], [420.0, 16161.0], [446.0, 12094.0], [447.0, 10385.0], [445.0, 13311.0], [444.0, 12862.0], [443.0, 10802.0], [442.0, 14645.0], [441.0, 13621.0], [440.0, 12677.0], [439.0, 15425.0], [433.0, 16370.0], [432.0, 12514.0], [435.0, 15481.0], [434.0, 16360.0], [438.0, 10335.0], [437.0, 15592.0], [436.0, 16236.0], [462.0, 11735.0], [463.0, 10509.0], [461.0, 13390.0], [460.0, 13116.0], [459.0, 13650.0], [458.0, 11780.0], [457.0, 9836.0], [456.0, 9999.0], [455.0, 11035.0], [449.0, 12072.0], [451.0, 12603.0], [450.0, 11132.0], [454.0, 11904.0], [452.0, 10460.0], [478.0, 9053.0], [479.0, 10431.0], [477.0, 10977.0], [476.0, 9606.0], [475.0, 8948.0], [474.0, 9923.0], [473.0, 10597.0], [472.0, 7160.0], [471.0, 10369.0], [465.0, 12465.0], [464.0, 11773.0], [467.0, 11382.0], [466.0, 13827.0], [470.0, 9115.0], [469.0, 10775.0], [468.0, 11119.0], [494.0, 5532.0], [495.0, 6430.0], [493.0, 8477.0], [492.0, 7913.0], [491.0, 8280.0], [490.0, 8259.0], [489.0, 8383.0], [488.0, 6719.0], [487.0, 9207.0], [481.0, 10175.0], [480.0, 11054.0], [483.0, 9150.0], [482.0, 10709.0], [486.0, 7907.0], [485.0, 9349.0], [484.0, 8899.0], [500.0, 4148.0], [499.0, 6087.0], [498.0, 6445.0], [497.0, 5973.0], [496.0, 6497.0], [1.0, 595.0]], "isOverall": false, "label": "HTTP 要求: Step3: Change Avatar", "isController": false}, {"data": [[250.81400000000022, 17614.165999999997]], "isOverall": false, "label": "HTTP 要求: Step3: Change Avatar-Aggregated", "isController": false}, {"data": [[68.0, 2856.0], [98.0, 1291.0], [101.0, 2327.0], [108.0, 3100.5], [112.0, 2110.0], [118.0, 27667.0], [127.0, 2225.0], [135.0, 2034.0], [131.0, 1945.0], [130.0, 2230.0], [128.0, 2056.0], [137.0, 2022.0], [159.0, 31544.0], [165.0, 14912.5], [163.0, 32850.0], [162.0, 17181.0], [175.0, 8452.0], [173.0, 17585.5], [172.0, 29876.0], [181.0, 20634.0], [212.0, 29885.0], [230.0, 3958.0], [238.0, 4551.0], [251.0, 27585.0], [271.0, 16319.0], [268.0, 26415.0], [257.0, 10602.5], [256.0, 26558.0], [283.0, 4194.5], [276.0, 4071.0], [296.0, 345.0], [294.0, 26402.0], [289.0, 27609.0], [316.0, 19775.0], [311.0, 9235.0], [305.0, 23769.0], [333.0, 7509.0], [332.0, 16837.0], [326.0, 16784.0], [322.0, 9393.0], [350.0, 9481.0], [349.0, 19649.25], [346.0, 19875.5], [345.0, 19732.0], [343.0, 12068.0], [367.0, 5899.0], [358.0, 21536.0], [354.0, 14261.0], [383.0, 16049.0], [381.0, 17171.0], [378.0, 15813.0], [374.0, 17578.333333333332], [370.0, 7765.0], [368.0, 15283.5], [398.0, 2917.0], [397.0, 2929.0], [393.0, 17017.666666666668], [386.0, 11102.0], [384.0, 16263.8], [414.0, 10722.0], [413.0, 13668.0], [412.0, 13308.333333333334], [411.0, 12598.666666666666], [406.0, 19308.0], [405.0, 16623.0], [402.0, 6234.5], [400.0, 19160.0], [431.0, 16121.0], [430.0, 17125.0], [429.0, 8633.5], [428.0, 10658.0], [427.0, 19317.0], [425.0, 8080.0], [424.0, 4048.0], [422.0, 11017.0], [445.0, 5361.0], [442.0, 10993.0], [437.0, 16041.0], [460.0, 6043.0], [462.0, 4614.0], [463.0, 12857.0], [461.0, 10047.0], [457.0, 12218.0], [456.0, 7314.0], [455.0, 2863.0], [452.0, 9824.0], [451.0, 13218.0], [450.0, 3064.0], [449.0, 9907.0], [478.0, 8965.5], [479.0, 6259.75], [477.0, 7366.5], [467.0, 10607.0], [466.0, 7131.666666666667], [465.0, 12508.0], [464.0, 9531.0], [475.0, 9503.5], [474.0, 8561.0], [472.0, 8395.0], [471.0, 11122.333333333334], [469.0, 8277.0], [468.0, 10001.0], [494.0, 4500.0], [495.0, 4004.75], [493.0, 5250.857142857143], [492.0, 6704.5], [491.0, 6588.6], [490.0, 5752.0], [489.0, 6276.5], [488.0, 5643.2], [487.0, 7248.25], [481.0, 9036.333333333334], [480.0, 7019.5], [483.0, 12711.0], [482.0, 8574.5], [485.0, 3774.0000000000005], [484.0, 7013.200000000001], [500.0, 1866.835555555556], [499.0, 3815.74074074074], [498.0, 4776.357142857143], [496.0, 4226.333333333333]], "isOverall": false, "label": "HTTP 要求: Step2: Profile", "isController": false}, {"data": [[451.974, 5980.641999999997]], "isOverall": false, "label": "HTTP 要求: Step2: Profile-Aggregated", "isController": false}, {"data": [[103.0, 76409.0], [159.0, 74616.75], [154.0, 74783.0], [152.0, 75231.0], [170.0, 74554.0], [183.0, 74229.5], [182.0, 74475.0], [231.0, 73157.0], [227.0, 74235.0], [246.0, 69875.0], [245.0, 70559.0], [242.0, 70351.0], [296.0, 66082.0], [292.0, 69278.0], [312.0, 65681.0], [332.0, 65808.0], [346.0, 65831.66666666667], [430.0, 59511.0], [427.0, 59408.0], [418.0, 62036.0], [446.0, 57096.0], [441.0, 58470.0], [457.0, 56569.333333333336], [456.0, 56586.0], [479.0, 53668.0], [475.0, 53673.0], [473.0, 53362.0], [467.0, 55664.0], [466.0, 56228.5], [495.0, 48936.6], [493.0, 49422.8], [492.0, 51352.5], [491.0, 51624.0], [490.0, 52028.0], [489.0, 51744.0], [485.0, 51565.5], [484.0, 53550.5], [500.0, 43313.25062034744], [499.0, 47420.0], [498.0, 49128.99999999999], [496.0, 49012.142857142855]], "isOverall": false, "label": "HTTP 要求: Step1: Login", "isController": false}, {"data": [[484.3020000000002, 45879.78400000004]], "isOverall": false, "label": "HTTP 要求: Step1: Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3167.6833333333334, "minX": 1.67929986E12, "maxY": 19000.25, "series": [{"data": [[1.67929992E12, 5200.283333333334], [1.67929986E12, 19000.25]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67929992E12, 3167.6833333333334], [1.67929986E12, 10565.683333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67929992E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 5603.33121019108, "minX": 1.67929986E12, "maxY": 74597.69230769231, "series": [{"data": [[1.67929992E12, 18894.904958677696], [1.67929986E12, 16412.852713178287]], "isOverall": false, "label": "HTTP 要求: Step3: Change Avatar", "isController": false}, {"data": [[1.67929992E12, 12108.689655172415], [1.67929986E12, 5603.33121019108]], "isOverall": false, "label": "HTTP 要求: Step2: Profile", "isController": false}, {"data": [[1.67929992E12, 74597.69230769231], [1.67929986E12, 45113.18685831626]], "isOverall": false, "label": "HTTP 要求: Step1: Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67929992E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 5603.2632696390665, "minX": 1.67929986E12, "maxY": 74597.61538461539, "series": [{"data": [[1.67929992E12, 18894.855371900823], [1.67929986E12, 16412.7480620155]], "isOverall": false, "label": "HTTP 要求: Step3: Change Avatar", "isController": false}, {"data": [[1.67929992E12, 12108.689655172415], [1.67929986E12, 5603.2632696390665]], "isOverall": false, "label": "HTTP 要求: Step2: Profile", "isController": false}, {"data": [[1.67929992E12, 74597.61538461539], [1.67929986E12, 45113.086242299796]], "isOverall": false, "label": "HTTP 要求: Step1: Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67929992E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67929986E12, "maxY": 7935.384615384616, "series": [{"data": [[1.67929992E12, 47.00413223140494], [1.67929986E12, 0.0]], "isOverall": false, "label": "HTTP 要求: Step3: Change Avatar", "isController": false}, {"data": [[1.67929992E12, 101.48275862068965], [1.67929986E12, 2.110403397027601]], "isOverall": false, "label": "HTTP 要求: Step2: Profile", "isController": false}, {"data": [[1.67929992E12, 7935.384615384616], [1.67929986E12, 6927.926078028751]], "isOverall": false, "label": "HTTP 要求: Step1: Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67929992E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 83.0, "minX": 1.67929986E12, "maxY": 76409.0, "series": [{"data": [[1.67929992E12, 76409.0], [1.67929986E12, 70559.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67929992E12, 595.0], [1.67929986E12, 83.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67929992E12, 32076.0], [1.67929986E12, 46013.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67929992E12, 74903.74999999999], [1.67929986E12, 64770.01999999976]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67929992E12, 17937.0], [1.67929986E12, 18538.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.67929992E12, 36487.0], [1.67929986E12, 48949.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67929992E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4083.0, "minX": 1.0, "maxY": 43144.0, "series": [{"data": [[2.0, 31770.0], [142.0, 42738.5], [35.0, 15556.0], [10.0, 17460.0], [11.0, 41657.0], [193.0, 43144.0], [3.0, 14643.5], [50.0, 11776.5], [54.0, 7910.0], [58.0, 40707.0], [61.0, 9767.0], [1.0, 26654.0], [4.0, 14523.0], [67.0, 23035.0], [69.0, 9693.0], [72.0, 6030.0], [75.0, 16794.0], [82.0, 4083.0], [5.0, 6465.0], [95.0, 14134.0], [99.0, 25787.0], [105.0, 19206.0], [7.0, 40118.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 193.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 4083.0, "minX": 1.0, "maxY": 43143.0, "series": [{"data": [[2.0, 31770.0], [142.0, 42738.5], [35.0, 15556.0], [10.0, 17460.0], [11.0, 41657.0], [193.0, 43143.0], [3.0, 14643.5], [50.0, 11776.5], [54.0, 7909.5], [58.0, 40707.0], [61.0, 9767.0], [1.0, 26654.0], [4.0, 14523.0], [67.0, 23035.0], [69.0, 9693.0], [72.0, 6030.0], [75.0, 16794.0], [82.0, 4083.0], [5.0, 6465.0], [95.0, 14134.0], [99.0, 25787.0], [105.0, 19206.0], [7.0, 40117.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 193.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7, "minX": 1.6792998E12, "maxY": 15.966666666666667, "series": [{"data": [[1.67929992E12, 0.7], [1.6792998E12, 8.333333333333334], [1.67929986E12, 15.966666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67929992E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 4.733333333333333, "minX": 1.67929986E12, "maxY": 20.266666666666666, "series": [{"data": [[1.67929992E12, 4.733333333333333], [1.67929986E12, 20.266666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67929992E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.67929986E12, "maxY": 8.116666666666667, "series": [{"data": [[1.67929992E12, 4.033333333333333], [1.67929986E12, 4.3]], "isOverall": false, "label": "HTTP 要求: Step3: Change Avatar-success", "isController": false}, {"data": [[1.67929992E12, 0.21666666666666667], [1.67929986E12, 8.116666666666667]], "isOverall": false, "label": "HTTP 要求: Step1: Login-success", "isController": false}, {"data": [[1.67929992E12, 0.48333333333333334], [1.67929986E12, 7.85]], "isOverall": false, "label": "HTTP 要求: Step2: Profile-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67929992E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 4.733333333333333, "minX": 1.67929986E12, "maxY": 20.266666666666666, "series": [{"data": [[1.67929992E12, 4.733333333333333], [1.67929986E12, 20.266666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67929992E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

